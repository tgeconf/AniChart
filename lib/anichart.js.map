{"version":3,"sources":["webpack://anichart/webpack/universalModuleDefinition","webpack://anichart/webpack/bootstrap","webpack://anichart/./src/ActionSpec.js","webpack://anichart/./src/AniChart.js","webpack://anichart/./src/Animation.js","webpack://anichart/./src/ChartSpec.js","webpack://anichart/./src/FacetSpec.js","webpack://anichart/./src/GroupingSpec.js","webpack://anichart/./src/Renderer.js","webpack://anichart/./src/TimingSpec.js","webpack://anichart/./src/index.js","webpack://anichart/./src/util/Util.js"],"names":["ActionSpec","chartIdx","_type","actionTypes","appear","animationType","_easing","easingType","easeLinear","_duration","startTime","attribute","attrName","from","to","actionJson","type","reference","offset","duration","easing","tp","Object","keys","includes","alert","es","drtn","Math","floor","FRAME_RATE","changedAttrs","dataTrans","actionJsonArr","i","changedAttr","fromArr","toArr","forEach","transArr","markId","length","tmpFromItem","tmpToItem","tmpFromPath","document","createElementNS","tmpToPath","setAttributeNS","tmpFromPathLen","getTotalLength","tmpToPathLen","stepNum","fromPathStepLen","toPathStepLen","fromDiscritPath","toDiscritPath","tmpFromPnt","getPointAtLength","tmpToPnt","push","x","y","parseFloat","preObj","timingRef","previousStart","transition","actionTargets","mark","targetAnimationType","custom","tmpObj","mask","fade","fadeOut","wipeBottom","wipe","wipeOutFromTop","wipeTop","move","wipeOutFromBottom","wipeLeft","wipeOutFromRight","wipeRight","wipeOutFromLeft","wheel","wheelOut","circle","circleOut","grow","degrow","zoom","tmpObj2","actionArr","durationAttrValues","domMarks","wholeStart","wholeEnd","lastStart","lastEnd","durationWithAttr","tmpStartMap","tmpEndMap","Map","calOffsetTime","mistake","tmpStart","set","minTmpStart","maxTmpEnd","offsetStart","tmpEnd","tmpResultDuration","resultDurations","minValueEachAttr","attrs","attrValue","get","tmpExtraDuration","minAttrValue","value","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeOutBounce","AniChart","chartSpecs","facet","_animations","spec","aniChartObj","charts","chartName","id","tmpChart","source","views","loadCharts","svgChart","removeTransAndMerge","getElementById","innerHTML","appendChild","bBoxes","getBBoxes","animateChart","processAnimateChart","animations","Array","isArray","lastAnimation","aniIdx","animationJson","tmpContainer","createElement","body","outerHTML","marks","querySelectorAll","selection","usedChangedAttrs","animation","translate","markIds","call","classList","contains","getAttribute","tagName","markJSON","toJSON","transformedAttrs","discretizePath","data","attr","tfAttrsDataKeys","tAttr","innerRadius","rx","outterRadius","toDOM","tmpDomAttrObj","attrArr","attributes","name","markDom","getBBox","width","height","textContent","dataDatumAttrValue","JSON","parse","calAniTime","removeChild","renderAnimation","aniJson","idxAniJson","map","tmpAni","chartNum","tmpAniJson","deepClone","previousEnd","tmpIdxAniJson","url","callback","xhr","XMLHttpRequest","okStatus","location","protocol","open","overrideMimeType","send","status","responseText","console","log","Animation","grouping","actions","animationStartTime","animationEndTime","checkFormat","initGrouping","visAttrActionJsonArr","transToVisualAttrAction","j","visAttrActionJson","tmpAction","initAction","that","tmpAttrValues","action","datum","field","minDuration","calActionDuration","actionsDurations","processedActions","marksInOrder","arrangeOrder","markAni","groupByMap","vAttr","visualAttrs","sqrt","pow","PI","minStatus","finalStatus","calTimeInGrouping","tmpAllStart","timeDiff","totalDuration","a","tmpActionSpec","actionAttrs","allMarkAni","currentStartTime","currentEndTime","tmpEndTime","wholeEndTime","maskActionByAttr","markActionByAttr","item","actionList","tmpAction0","timePoint","frame","currentStatus","resultValue","calAttrValue","lastValue","endTime","size","percentage","ratio","calRatio","fromColor","toColor","fromRGB","color2RGB","toRGB","valueR","parseInt","valueG","valueB","startValue","isNaN","finalValue","startY","startX","startAngle","endAngle","_startAngle","_endAngle","tmpAngle","startRadius","endRadius","tmpRadius","startDashOffset","finalDashOffset","startDiscretVal","finalDiscretVal","calTransD","easeFuncs","clear","frames","endX","p","ChartSpec","nameCharts","nullCharts","svgContent","tmpDiv","children","unshift","slice","facetViews","setAttribute","removeTransitions","resultChart","mergeCharts","chartsToCombine","tmpRecorder","cloneNode","combineCharts","facetType","facetNum","resultCharts","chartMargin","tmpCharts","oriWidth","oriHeight","viewBoxNums","split","viewBoxW","viewBoxH","chartTransForm","getTransformAttrs","transNums","scaleNum","row","col","tmpMarks","m","idNum","substring","add","chartContentG","chartChildren","tmpDom","transformAttrs","allMarks","Set","markStatus","markTempletes","attrNames","nullStatus","statusObj","fill","attrNamesCopy","statusArr","flag","compareStatus","splice","diffCmds","indexOf","findDiffCmds","markDoms","markStr","targetValue","resultD","setPathDValue","d","parser","DOMParser","svgMark","parseFromString","lastChild","querySelector","dataTransArr","si","tmpStatus","stringify","svg","bBox","t","tr","parentTrans","parentNode","replace","scaleStr","transStr","transPosiStr","transShape","join","markBoundingRects","chartStr","aniSvg","aniMarks","am","idIndex","rect","rect2","FacetSpec","_views","maxLen","lastItem","numDiff","GroupingSpec","_groupBy","_reference","_delay","sort","order","expr","groupingJson","groupBy","delay","root","groupRef","generateTree","orderedMarks","getMarkOrder","groupByRef","nodesThisLevel","refValue","hasSingleMark","ref","orderRef","nodesThisLevelArr","orderType","b","markId1","markId2","orderRefValue1","orderRefValue2","datum1","datum2","orderTypes","ascending","descending","random","tmpNode","queue","shift","ani","groupByArr","currentGroupRef","firstItemLastGroup","lastItemLastGroup","currentGroup","lastGroup","updateGroupingTime","markAniArr","entries","previousStartTime","previousEndTime","absolute","maxDuration","maxDurationItemLastGroup","itemLastGroup","gb","tmpRefStr","transRef","dly","Renderer","ctime","renderFrame","singleStatus","aniId","checkHTML","strToDomNode","getAttributeNS","aniMarkBgId","currentAniMarkBBox","testAniMCover","aniMCover","generateMaskCover","coverTypes","arc","cx","cy","wedge","path","coverType","updateAttrName","updateAttrValue","maskCover","animaskCovers","mc","time","animationInterval","setInterval","locatedFrame","clearInterval","Symbol","TimingSpec","_offset","allItemsStart","itemStart","itemsStart","offsetValue","minOffset","offsetRef","tmpOffsetRefStr","ofst","refStr","require","window","aniChart","frameRate","loadSpec","renderSpec","init","render","play","reset","resetCover","resetAll","test","Util","obj","objType","result","key","hasOwnProperty","currentTimeS","currentTimeMS","currentTimeSStr","currentTimeMSStr","color","toLowerCase","colorNames","tmpStr","substr","rgb","HEX2RGB","hex","charAt","values","r","g","toString","node","nodeType","nodeName","nodeValue","createTextNode","createComment","implementation","createDocument","createDocumentType","createDocumentFragment","discretizeD","fillColor","resultGroup","reg","group","undefined","exec","reduce","c","index","command","parameters","filter","n","trim","every","convertColor","lines","prev","valid","v","firstPoint","secondPoint","circles","svgArcToCenterParam","apply","concat","ry","rotate","abs","attrResult","radius","ux","uy","vx","vy","dot","mod","rad","acos","x1","y1","phi","fA","fS","x2","y2","deltaAngle","PIx2","Error","s_phi","sin","c_phi","cos","hd_x","hd_y","hs_x","hs_y","x1_","y1_","lambda","rxry","rxy1_","ryx1_","sum_of_sq","coe","cx_","cy_","xcr1","xcr2","ycr1","ycr2","radian","outputObj","clockwise","str","fMode","tMode","mr","startsWith","match","padStart","centerX","centerY","angleInRadians","round","largeArcFlag","start1","polarToCartesian","end1","start2","end2","isRing","domNode","element","dom","firstChild","tx","ty","hasPosi","resultCmd","cmdRegExp","RegExp","cmds","firstCmdName","resetX","resetY","firstCmdValues","cmdName","cmdValue","calNumTrans","nums","ni","nums2","anums","anums2","currentCmdIdx","resetVal","tVal","diffCmdIdxs","cmdIdx","startD","endD","startDisD","endDisD","len","fromStartAngle","fromEndAngle","toStartAngle","toEndAngle","interpolateFn","validAngle","s","e","minimalAngle","interpolate","tmpDRecorder","compareD","dArr","firstD","firstDCmds","tmpD","tmpDCmds","diffAttrIdxs","firstDCmdValue","firstDCmdValues","tmpDCmdValue","tmpDCmdValues","hasFlag","scaleNumStr"],"mappings":"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","file":"anichart.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"anichart\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"anichart\"] = factory();\n\telse\n\t\troot[\"anichart\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/index.js\");\n","import TimingSpec from './TimingSpec.js';\r\n\r\nclass ActionSpec extends TimingSpec {\r\n    constructor() {\r\n        super();\r\n        this.chartIdx = 0;\r\n        this._type = ActionSpec.actionTypes.appear;\r\n        this.animationType = '';//not set by the user\r\n        this._easing = ActionSpec.easingType.easeLinear;\r\n        this._duration = 0;\r\n        this.startTime;//not set by the user\r\n        this.attribute = class {\r\n            constructor() {\r\n                this.attrName;\r\n                this.from;\r\n                this.to;\r\n            }\r\n        }\r\n    }\r\n\r\n    /***** getters and setters *****/\r\n    set type(tp) {\r\n        if (typeof tp !== 'undefined') {\r\n            if (Object.keys(ActionSpec.actionTypes).includes(tp)) {\r\n                this._type = tp;\r\n            } else {\r\n                alert('the \\'type\\' of action is not defined. ')\r\n            }\r\n        }\r\n    }\r\n\r\n    get type() {\r\n        return this._type;\r\n    }\r\n\r\n    set easing(es) {\r\n        if (typeof es !== 'undefined') {\r\n            if (Object.keys(ActionSpec.easingType).includes(es)) {\r\n                this._easing = es;\r\n            } else {\r\n                alert('the \\'easing\\' of action is not defined. ')\r\n            }\r\n        }\r\n    }\r\n\r\n    get easing() {\r\n        return this._easing;\r\n    }\r\n\r\n    set duration(drtn) {\r\n        if (typeof drtn !== 'undefined') {\r\n            if (typeof drtn === 'number') {\r\n                this._duration = Math.floor(drtn / (1000 / TimingSpec.FRAME_RATE)) * (1000 / TimingSpec.FRAME_RATE);\r\n            } else {\r\n                this._duration = drtn;\r\n            }\r\n        }\r\n    }\r\n\r\n    get duration() {\r\n        return this._duration;\r\n    }\r\n    /***** end getters and setters *****/\r\n\r\n    /**\r\n     * init action using json obj\r\n     * @param {JSON obj} actionJson\r\n     */\r\n    initAction(actionJson) {\r\n        this.chartIdx = actionJson.chartIdx;\r\n        this.type = actionJson.type;//action type\r\n        this.animationType = actionJson.animationType;//animation type\r\n        this.reference = actionJson.reference;//timingSpec reference\r\n        this.offset = actionJson.offset;//timingSpec delay\r\n        this.duration = actionJson.duration;//action duration\r\n        this.easing = actionJson.easing;\r\n\r\n        //attributes only take effect when type is custom\r\n        if (typeof actionJson.attribute !== 'undefined') {\r\n            this.attribute.attrName = actionJson.attribute.attrName;\r\n            this.attribute.from = actionJson.attribute.from;\r\n            this.attribute.to = actionJson.attribute.to;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * translate template animations to 'custom' type with the transition on some visual attributes\r\n     */\r\n    static transToVisualAttrAction(actionJson, chartIdx, changedAttrs, dataTrans) {\r\n        let actionJsonArr = [];\r\n\r\n        //generate pre-render actions\r\n        for (let i = 0; i < changedAttrs.length; i++) {\r\n            let changedAttr = changedAttrs[i];\r\n            let fromArr = [], toArr = [];\r\n            dataTrans.forEach(function (transArr, markId) {\r\n                if (chartIdx + 1 < transArr.length) {\r\n                    if (changedAttr === 'd' || changedAttr === 'textContent' || changedAttr === 'fill' || changedAttr === 'stroke') {\r\n                        let tmpFromItem = [markId, !transArr[chartIdx][changedAttr] ? (changedAttr === 'd' ? 'm0,0' : transArr[chartIdx][changedAttr]) : transArr[chartIdx][changedAttr]],\r\n                            tmpToItem = [markId, !transArr[chartIdx + 1][changedAttr] ? (changedAttr === 'd' ? 'm0,0' : transArr[chartIdx + 1][changedAttr]) : transArr[chartIdx + 1][changedAttr]];\r\n                        if (changedAttr === 'd') {\r\n                            let tmpFromPath = document.createElementNS('http://www.w3.org/2000/svg', 'path'),\r\n                                tmpToPath = document.createElementNS('http://www.w3.org/2000/svg', 'path');\r\n                            tmpFromPath.setAttributeNS(null, 'd', !transArr[chartIdx][changedAttr] ? 'm0,0' : transArr[chartIdx][changedAttr]);\r\n                            tmpToPath.setAttributeNS(null, 'd', !transArr[chartIdx + 1][changedAttr] ? 'm0,0' : transArr[chartIdx + 1][changedAttr]);\r\n                            let tmpFromPathLen = tmpFromPath.getTotalLength(),\r\n                                tmpToPathLen = tmpToPath.getTotalLength();\r\n                            let stepNum = 300, fromPathStepLen = tmpFromPathLen / stepNum, toPathStepLen = tmpToPathLen / stepNum;\r\n                            let fromDiscritPath = [], toDiscritPath = [];\r\n                            for (let i = 0; i < stepNum; i++) {\r\n                                let tmpFromPnt = tmpFromPath.getPointAtLength(fromPathStepLen * i),\r\n                                    tmpToPnt = tmpToPath.getPointAtLength(toPathStepLen * i);\r\n                                fromDiscritPath.push([tmpFromPnt.x, tmpFromPnt.y]);\r\n                                toDiscritPath.push([tmpToPnt.x, tmpToPnt.y]);\r\n                            }\r\n                            tmpFromItem.push(fromDiscritPath);\r\n                            tmpToItem.push(toDiscritPath);\r\n                        }\r\n                        fromArr.push(tmpFromItem);\r\n                        toArr.push(tmpToItem);\r\n                    } else {\r\n                        fromArr.push([markId, parseFloat(transArr[chartIdx][changedAttr])]);\r\n                        toArr.push([markId, parseFloat(transArr[chartIdx + 1][changedAttr])]);\r\n                    }\r\n                }\r\n            })\r\n            let preObj = {\r\n                chartIdx: actionJson.chartIdx,\r\n                reference: TimingSpec.timingRef.previousStart,\r\n                offset: 0,\r\n                duration: actionJson.type === ActionSpec.actionTypes.transition ? actionJson.duration : 0,\r\n                type: ActionSpec.actionTargets.mark,\r\n                animationType: ActionSpec.targetAnimationType.custom,\r\n                attribute: {\r\n                    attrName: changedAttr,\r\n                    from: fromArr,\r\n                    to: toArr\r\n                }\r\n            }\r\n\r\n            actionJsonArr.push(preObj);\r\n        }\r\n\r\n        if (actionJson.type !== ActionSpec.actionTypes.transition) {\r\n            let tmpObj = {\r\n                chartIdx: actionJson.chartIdx,\r\n                reference: actionJson.reference,//timingSpec offset reference\r\n                offset: actionJson.offset,\r\n                easing: actionJson.easing,\r\n                duration: typeof actionJson.duration === 'undefined' ? 300 : actionJson.duration,\r\n                type: ActionSpec.actionTargets.mask\r\n            };\r\n\r\n            switch (actionJson.type) {\r\n                case ActionSpec.actionTypes.fade:\r\n                    tmpObj.animationType = ActionSpec.targetAnimationType.fade;\r\n                    tmpObj.attribute = {\r\n                        attrName: 'opacity',\r\n                        from: 1,\r\n                        to: 0\r\n                    };\r\n                    break;\r\n                case ActionSpec.actionTypes.fadeOut:\r\n                    tmpObj.animationType = ActionSpec.targetAnimationType.fade;\r\n                    tmpObj.attribute = {\r\n                        attrName: 'opacity',\r\n                        from: 0,\r\n                        to: 1\r\n                    };\r\n                    break;\r\n                case ActionSpec.actionTypes.wipeBottom:\r\n                    tmpObj.animationType = ActionSpec.targetAnimationType.wipe;\r\n                    tmpObj.attribute = {\r\n                        attrName: 'height',\r\n                        from: 1,\r\n                        to: 0\r\n                    };\r\n                    break;\r\n                case ActionSpec.actionTypes.wipeOutFromTop:\r\n                    tmpObj.animationType = ActionSpec.targetAnimationType.wipe;\r\n                    tmpObj.attribute = {\r\n                        attrName: 'height',\r\n                        from: 0,\r\n                        to: 1\r\n                    };\r\n                    break;\r\n                case ActionSpec.actionTypes.wipeTop:\r\n                    tmpObj.animationType = ActionSpec.targetAnimationType.move;\r\n                    tmpObj.attribute = {\r\n                        attrName: 'y',\r\n                        from: 0,\r\n                        to: 1\r\n                    };\r\n                    break;\r\n                case ActionSpec.actionTypes.wipeOutFromBottom:\r\n                    tmpObj.animationType = ActionSpec.targetAnimationType.move;\r\n                    tmpObj.attribute = {\r\n                        attrName: 'y',\r\n                        from: 1,\r\n                        to: 0\r\n                    };\r\n                    break;\r\n                case ActionSpec.actionTypes.wipeLeft:\r\n                    tmpObj.animationType = ActionSpec.targetAnimationType.move;\r\n                    tmpObj.attribute = {\r\n                        attrName: 'x',\r\n                        from: 0,\r\n                        to: 1\r\n                    };\r\n                    break;\r\n                case ActionSpec.actionTypes.wipeOutFromRight:\r\n                    tmpObj.animationType = ActionSpec.targetAnimationType.move;\r\n                    tmpObj.attribute = {\r\n                        attrName: 'x',\r\n                        from: 1,\r\n                        to: 0\r\n                    };\r\n                    break;\r\n                case ActionSpec.actionTypes.wipeRight:\r\n                    tmpObj.animationType = ActionSpec.targetAnimationType.wipe;\r\n                    tmpObj.attribute = {\r\n                        attrName: 'width',\r\n                        from: 1,\r\n                        to: 0\r\n                    };\r\n                    break;\r\n                case ActionSpec.actionTypes.wipeOutFromLeft:\r\n                    tmpObj.animationType = ActionSpec.targetAnimationType.wipe;\r\n                    tmpObj.attribute = {\r\n                        attrName: 'width',\r\n                        from: 0,\r\n                        to: 1\r\n                    };\r\n                    break;\r\n                case ActionSpec.actionTypes.wheel:\r\n                    tmpObj.animationType = ActionSpec.targetAnimationType.wheel;\r\n                    tmpObj.attribute = {\r\n                        attrName: 'startAngle',\r\n                        from: 0,\r\n                        to: 1\r\n                    };\r\n                    break;\r\n                case ActionSpec.actionTypes.wheelOut:\r\n                    tmpObj.animationType = ActionSpec.targetAnimationType.wheel;\r\n                    tmpObj.attribute = {\r\n                        attrName: 'startAngle',\r\n                        from: 1,\r\n                        to: 0\r\n                    };\r\n                    break;\r\n                case ActionSpec.actionTypes.circle:\r\n                    tmpObj.animationType = ActionSpec.targetAnimationType.circle;\r\n                    tmpObj.attribute = {\r\n                        attrName: 'innerRadius',\r\n                        from: 0,\r\n                        to: 1\r\n                    };\r\n                    break;\r\n                case ActionSpec.actionTypes.circleOut:\r\n                    tmpObj.animationType = ActionSpec.targetAnimationType.circle;\r\n                    tmpObj.attribute = {\r\n                        attrName: 'innerRadius',\r\n                        from: 1,\r\n                        to: 0\r\n                    };\r\n                    break;\r\n                case ActionSpec.actionTypes.grow:\r\n                    tmpObj.type = ActionSpec.actionTargets.mark;\r\n                    tmpObj.animationType = ActionSpec.targetAnimationType.grow;\r\n                    tmpObj.attribute = {\r\n                        attrName: 'stroke-dashoffset',\r\n                        from: 1,\r\n                        to: 0\r\n                    };\r\n                    break;\r\n                case ActionSpec.actionTypes.degrow:\r\n                    tmpObj.type = ActionSpec.actionTargets.mark;\r\n                    tmpObj.animationType = ActionSpec.targetAnimationType.grow;\r\n                    tmpObj.attribute = {\r\n                        attrName: 'stroke-dashoffset',\r\n                        from: 0,\r\n                        to: 1\r\n                    };\r\n                    break;\r\n                case ActionSpec.actionTypes.appear:\r\n                    tmpObj.duration = 1000 / TimingSpec.FRAME_RATE;\r\n                    tmpObj.animationType = ActionSpec.targetAnimationType.fade;\r\n                    tmpObj.attribute = {\r\n                        attrName: 'opacity',\r\n                        from: 1,\r\n                        to: 0\r\n                    };\r\n                    break;\r\n                case ActionSpec.actionTypes.zoom:\r\n                    tmpObj.type = ActionSpec.actionTargets.mark;\r\n                    tmpObj.reference = TimingSpec.timingRef.previousStart;\r\n                    tmpObj.offset = 0;\r\n                    tmpObj.animationType = ActionSpec.targetAnimationType.wipe;\r\n                    tmpObj.attribute = {\r\n                        attrName: 'width',\r\n                        from: 0,\r\n                        to: 1\r\n                    };\r\n\r\n                    let tmpObj2 = {\r\n                        chartIdx: actionJson.chartIdx,\r\n                        easing: actionJson.easing,\r\n                        duration: typeof actionJson.duration === 'undefined' ? 300 : actionJson.duration,\r\n                        reference: actionJson.reference,//timingSpec offset reference\r\n                        offset: actionJson.offset,\r\n                        type: ActionSpec.actionTargets.mask,\r\n                        animationType: ActionSpec.targetAnimationType.wipe,\r\n                        attribute: {\r\n                            attrName: 'height',\r\n                            from: 1,\r\n                            to: 0\r\n                        }\r\n                    };\r\n                    actionJsonArr.push(tmpObj2);\r\n\r\n                    break;\r\n                case ActionSpec.actionTypes.custom:\r\n                    tmpObj.type = ActionSpec.actionTargets.mark;\r\n                    tmpObj.animationType = ActionSpec.targetAnimationType.custom;\r\n                    tmpObj.attribute = {};\r\n                    if (typeof actionJson.attribute !== 'undefined') {\r\n                        tmpObj.attribute = {\r\n                            attrName: actionJson.attribute.attrName,\r\n                            from: actionJson.attribute.from,\r\n                            to: actionJson.attribute.to\r\n                        }\r\n                    }\r\n                    break;\r\n            }\r\n            actionJsonArr.push(tmpObj);\r\n        }\r\n\r\n        return actionJsonArr;\r\n    }\r\n\r\n    /**\r\n     * calculate the total duration of all the actions\r\n     * @param {Array<ActionSpec>} actionArr \r\n     * @param {Map} durationAttrValues: key: data attr name, value Map{key: markId, value: attr value}\r\n     */\r\n    static calActionDuration(actionArr, durationAttrValues, domMarks) {\r\n        let wholeStart = 0, wholeEnd = -100000;//start time of the earliest action and end time of the lastst action\r\n        let lastStart = 0, lastEnd = 0;\r\n        let durationWithAttr = false;\r\n\r\n        for (let i = 0; i < actionArr.length; i++) {\r\n            let tmpStartMap, tmpEndMap = new Map();\r\n            tmpStartMap = actionArr[i].calOffsetTime(lastStart, lastEnd, 0, domMarks);//change to retunr value of Map\r\n\r\n            //ignore the influence of the animation for the boundary of the mask\r\n            if (i > 0) {\r\n                if (actionArr[i - 1].animationType === ActionSpec.targetAnimationType.mistake) {\r\n                    tmpStartMap.forEach(function (tmpStart, markId) {\r\n                        tmpStartMap.set(markId, tmpStart - actionArr[i - 1].offset);\r\n                    })\r\n                }\r\n            }\r\n\r\n            let minTmpStart = 1000000, maxTmpEnd = -100000;\r\n            actionArr[i].offsetStart = new Map();\r\n            tmpStartMap.forEach(function (tmpStart, markId) {\r\n                let tmpEnd = 0;\r\n                if (typeof actionArr[i].duration === 'object') {\r\n                    durationWithAttr = true;\r\n                    tmpEnd = tmpStart;\r\n                } else if (typeof actionArr[i].duration === 'number') {\r\n                    tmpEnd = tmpStart + actionArr[i].duration;\r\n                }\r\n                tmpEndMap.set(markId, tmpEnd);\r\n                actionArr[i].offsetStart.set(markId, tmpStart);\r\n\r\n                if (tmpStart < minTmpStart) {\r\n                    minTmpStart = tmpStart;\r\n                }\r\n                if (tmpEnd > maxTmpEnd) {\r\n                    maxTmpEnd = tmpEnd;\r\n                }\r\n                if (tmpStart < wholeStart) {\r\n                    wholeStart = tmpStart;\r\n                }\r\n                if (tmpEnd > wholeEnd) {\r\n                    wholeEnd = tmpEnd;\r\n                }\r\n            })\r\n\r\n            lastStart = minTmpStart;\r\n            lastEnd = maxTmpEnd;\r\n        }\r\n\r\n        let tmpResultDuration = wholeEnd - wholeStart;\r\n        let resultDurations = new Map();//key: markId, value: duraiton of this mark\r\n        let minValueEachAttr = new Map();\r\n        if (durationWithAttr) {//add duration with the attribute values\r\n            //find the min value for each attr\r\n            durationAttrValues.forEach(function (attrs, markId) {\r\n                attrs.forEach(function (attrValue, attrName) {\r\n                    if (typeof minValueEachAttr.get(attrName) === 'undefined' || attrValue[0] < minValueEachAttr.get(attrName)) {\r\n                        minValueEachAttr.set(attrName, attrValue[0]);\r\n                    }\r\n                })\r\n            })\r\n            durationAttrValues.forEach(function (attrs, markId) {\r\n                let tmpExtraDuration = 0;\r\n                attrs.forEach(function (attrValue, attrName) {\r\n                    let minAttrValue = minValueEachAttr.get(attrName);\r\n\r\n                    tmpExtraDuration += attrValue[1] * attrValue[0] / minAttrValue;\r\n                })\r\n                resultDurations.set(markId, tmpResultDuration + tmpExtraDuration);\r\n            })\r\n        } else {//directly set the duration of each mark with tmpResultDuration\r\n            durationAttrValues.forEach(function (value, markId) {\r\n                resultDurations.set(markId, tmpResultDuration);\r\n            })\r\n        }\r\n        return [resultDurations, minValueEachAttr, actionArr];\r\n    }\r\n}\r\n\r\nActionSpec.actionTypes = {\r\n    fade: 'fade',\r\n    wipeBottom: 'wipe bottom',\r\n    wipeTop: 'wipe top',\r\n    wipeLeft: 'wipe left',\r\n    wipeRight: 'wipe right',\r\n    wheel: 'wheel',\r\n    appear: 'appear',\r\n    circle: 'circle',\r\n    grow: 'grow',\r\n    custom: 'custom',\r\n    fadeOut: 'fade out',\r\n    wipeOutFromLeft: 'wipe out from left',\r\n    wipeOutFromTop: 'wipe out from top',\r\n    wipeOutFromRight: 'wipe out from right',\r\n    wipeOutFromBottom: 'wipe out from bottom',\r\n    wheelOut: 'wheel out',\r\n    circleOut: 'circle out',\r\n    degrow: 'degrow',\r\n    transition: 'magic move',\r\n    zoom: 'zoom',\r\n    mark: 'mask',\r\n    mask: 'mark'\r\n}\r\n\r\nActionSpec.actionTargets = {\r\n    mark: 'mark',\r\n    mask: 'mask'\r\n}\r\n\r\nActionSpec.targetAnimationType = {\r\n    fade: 'fade',\r\n    wipe: 'wipe',\r\n    move: 'move',\r\n    wheel: 'wheel',\r\n    circle: 'circle',\r\n    appear: 'appear',\r\n    grow: 'grow',\r\n    custom: 'custom',\r\n    mistake: 'mistake'\r\n}\r\n\r\nActionSpec.easingType = {\r\n    easeLinear: 'easeLinear',\r\n    easeInQuad: 'easeInQuad',\r\n    easeOutQuad: 'easeOutQuad',\r\n    easeInOutQuad: 'easeInOutQuad',\r\n    easeInCubic: 'easeInCubic',\r\n    easeOutCubic: 'easeOutCubic',\r\n    easeInOutCubic: 'easeInOutCubic',\r\n    easeOutBounce: 'easeOutBounce'\r\n}\r\n\r\nexport default ActionSpec;","import ChartSpec from './ChartSpec.js';\r\nimport FacetSpec from './FacetSpec.js';\r\nimport TimingSpec from './TimingSpec.js';\r\nimport Animation from \"./Animation.js\";\r\nimport Util from './util/Util.js';\r\n\r\nclass AniChart {\r\n    constructor() {\r\n        this.chartSpecs;\r\n        this.facet;\r\n        this._animations;\r\n    }\r\n\r\n    set animations(aniJson) {\r\n        let idxAniJson = aniJson.map(tmpAni => {\r\n            tmpAni.chartIdx = 0\r\n            return tmpAni;\r\n        });\r\n        let chartNum = 0;//number of charts\r\n        if (this.facet) {\r\n            chartNum = this.facet.views[0].length;\r\n        } else {\r\n            chartNum = this.chartSpecs.length;\r\n        }\r\n        if (chartNum > 1) {//more than 1 input chart\r\n            for (let i = 1; i < chartNum - 1; i++) {\r\n                let tmpAniJson = Util.deepClone(aniJson);\r\n                tmpAniJson[0].reference = TimingSpec.timingRef.previousEnd;\r\n                let tmpIdxAniJson = tmpAniJson.map(tmpAni => {\r\n                    tmpAni.chartIdx = i;\r\n                    return tmpAni;\r\n                })\r\n                idxAniJson.push(...tmpIdxAniJson);\r\n            }\r\n        }\r\n        this._animations = idxAniJson;\r\n    }\r\n\r\n    get animations() {\r\n        return this._animations;\r\n    }\r\n\r\n    static loadSpec(url, callback) {\r\n        let xhr = new XMLHttpRequest(),\r\n            okStatus = document.location.protocol === \"file:\" ? 0 : 200;\r\n        xhr.open('GET', url, false);\r\n        xhr.overrideMimeType(\"text/html;charset=utf-8\");\r\n        xhr.send(null);\r\n        if (xhr.status === okStatus) {\r\n            let spec = xhr.responseText;\r\n            callback(JSON.parse(spec));\r\n        } else if (xhr.status === 404) {\r\n            console.log('can not find ' + url + ' ! Please check the url.');\r\n        }\r\n    }\r\n\r\n    init(spec) {\r\n        this.chartSpecs = [];\r\n        let aniChartObj = spec;\r\n\r\n        //deal with input charts\r\n        for (let i = 0; i < aniChartObj.charts.length; i++) {\r\n            let chartName = typeof aniChartObj.charts[i].id === 'undefined' ? 'chart' + i : aniChartObj.charts[i].id;\r\n            let tmpChart = new ChartSpec(chartName, aniChartObj.charts[i].source);\r\n            this.chartSpecs.push(tmpChart);\r\n        }\r\n\r\n        //init facet\r\n        if (aniChartObj.facet) {\r\n            this.facet = new FacetSpec(aniChartObj.facet.type, aniChartObj.facet.views);\r\n        }\r\n\r\n        ChartSpec.loadCharts(this.chartSpecs, this.facet);\r\n        let svgChart = ChartSpec.removeTransAndMerge();\r\n        document.getElementById('chartContainer').innerHTML = '';\r\n        document.getElementById('chartContainer').appendChild(svgChart);\r\n        let bBoxes = ChartSpec.getBBoxes();\r\n        let animateChart = ChartSpec.processAnimateChart(document.getElementById('chartContainer').innerHTML, bBoxes);\r\n        document.getElementById('videoContainer').innerHTML = '';\r\n        document.getElementById('videoContainer').appendChild(animateChart);\r\n\r\n        //deal with animations\r\n        this.animations = aniChartObj.animations;\r\n\r\n        if (Array.isArray(this.animations)) {\r\n            let lastAnimation;\r\n            for (let aniIdx = 0; aniIdx < this.animations.length; aniIdx++) {\r\n                let animationJson = this.animations[aniIdx];\r\n\r\n                //use the selection in animation to select marks and record dom attrs\r\n                let tmpContainer = document.createElement('div');\r\n                document.body.appendChild(tmpContainer);\r\n                tmpContainer.innerHTML = ChartSpec.charts[animationJson.chartIdx].outerHTML;\r\n                let marks = tmpContainer.querySelectorAll(animationJson.selection);\r\n\r\n                let usedChangedAttrs = [];\r\n                for (let i = 0; i < ChartSpec.changedAttrs.length; i++) {\r\n                    usedChangedAttrs.push(ChartSpec.changedAttrs[i]);\r\n                }\r\n\r\n                let animation = new Animation();\r\n                animation.translate(animationJson, usedChangedAttrs);//translate from json obj to Animation obj\r\n\r\n                let markIds = [];//record all ids of selected marks\r\n\r\n                if (marks.length > 0) {\r\n                    [].forEach.call(marks, function (mark) {\r\n                        if(mark.classList.contains('mark')){\r\n                            let markId = mark.getAttribute('id');\r\n                            markIds.push(markId);\r\n\r\n                            //process path\r\n                            if (mark.tagName === 'path') {//consider the linkage shape later\r\n                                let markJSON = Util.toJSON(mark);\r\n                                let transformedAttrs = Util.discretizePath(markJSON);\r\n\r\n                                if (transformedAttrs) {\r\n                                    if (transformedAttrs.type === 'lines') {\r\n                                        for (let i = 0; i < transformedAttrs.data.length; i++) {\r\n                                            markJSON.attr['x' + (1 + 2 * i)] = transformedAttrs.data[i][0][0];\r\n                                            markJSON.attr['y' + (1 + 2 * i)] = transformedAttrs.data[i][0][1];\r\n                                            markJSON.attr['x' + (2 + 2 * i)] = transformedAttrs.data[i][1][0];\r\n                                            markJSON.attr['y' + (2 + 2 * i)] = transformedAttrs.data[i][1][1];\r\n                                        }\r\n                                    } else {\r\n                                        let tfAttrsDataKeys = Object.keys(transformedAttrs.data);\r\n\r\n                                        for (let i = 0; i < tfAttrsDataKeys.length; i++) {\r\n                                            let tAttr = tfAttrsDataKeys[i];\r\n                                            if (tAttr === 'radius') {\r\n                                                if (transformedAttrs.data[tAttr].length > 1) {\r\n                                                    markJSON.attr.innerRadius = transformedAttrs.data[tAttr][0].rx + 1;\r\n                                                    markJSON.attr.outterRadius = transformedAttrs.data[tAttr][1].rx - 1;\r\n                                                } else {\r\n                                                    markJSON.attr.innerRadius = 0;\r\n                                                    markJSON.attr.outterRadius = transformedAttrs.data[tAttr][0].rx - 1;\r\n                                                }\r\n                                            } else {\r\n                                                markJSON.attr[tAttr] = transformedAttrs.data[tAttr];\r\n                                            }\r\n                                        }\r\n                                    }\r\n                                    mark = Util.toDOM(markJSON);\r\n                                }\r\n                            }\r\n\r\n                            let tmpDomAttrObj = {};\r\n                            let attrArr = [...mark.attributes];\r\n                            for (let i = 0; i < attrArr.length; i++) {\r\n                                let attrName = attrArr[i];\r\n                                tmpDomAttrObj[attrName.name] = mark.getAttribute(attrName.name);\r\n                            }\r\n                            let markDom = document.getElementById(markId);\r\n                            tmpDomAttrObj['bbWidth'] = markDom.getBBox().width;\r\n                            tmpDomAttrObj['bbHeight'] = markDom.getBBox().height;\r\n                            tmpDomAttrObj['bbX'] = markDom.getBBox().x;\r\n                            tmpDomAttrObj['bbY'] = markDom.getBBox().y;\r\n                            tmpDomAttrObj['content'] = mark.textContent;\r\n                            tmpDomAttrObj['id'] = markId;\r\n                            let dataDatumAttrValue = JSON.parse(mark.getAttribute('data-datum'));\r\n                            if (Array.isArray(dataDatumAttrValue)){\r\n                                dataDatumAttrValue = dataDatumAttrValue[0];\r\n                            }\r\n                            tmpDomAttrObj['data-datum'] = dataDatumAttrValue;\r\n                            if (mark.tagName === 'path' || mark.tagName === 'line') {\r\n                                tmpDomAttrObj['stroke-dasharray'] = document.getElementById(markId).getTotalLength();\r\n                                tmpDomAttrObj['stroke-dashoffset'] = document.getElementById(markId).getTotalLength();\r\n                            }\r\n                            animation.domMarks.set(markId, tmpDomAttrObj);\r\n                        }\r\n                    })\r\n                }\r\n                animation.calAniTime(markIds, lastAnimation);\r\n                lastAnimation = animation;\r\n                document.body.removeChild(tmpContainer);\r\n            }\r\n        }\r\n    }\r\n\r\n    render() {\r\n        Animation.renderAnimation();\r\n    }\r\n}\r\n\r\nexport default AniChart;","import ChartSpec from './ChartSpec.js';\r\nimport ActionSpec from './ActionSpec.js';\r\nimport GroupingSpec from './GroupingSpec.js';\r\nimport TimingSpec from './TimingSpec.js';\r\nimport Util from './util/Util.js';\r\n\r\nclass Animation extends TimingSpec {\r\n    constructor() {\r\n        super();\r\n        this.chartIdx;\r\n        this.selection;\r\n        this.grouping = new GroupingSpec();\r\n        this.actions = [];\r\n\r\n        //save all dom attrs of the marks selected in this animation\r\n        this.domMarks = new Map();//key: markId, value: dom attrs\r\n        this.animationStartTime = 1000000;\r\n        this.animationEndTime = 0;\r\n    }\r\n\r\n    /**\r\n     * translate from json object to Animation object\r\n     * @param {JSON obj} animationJson \r\n     */\r\n    translate(animationJson, usedChangedAttrs) {\r\n        if (this.checkFormat(animationJson)) {\r\n            this.chartIdx = animationJson.chartIdx;\r\n            this.selection = animationJson.selection;//init selection\r\n            this.reference = animationJson.reference;\r\n            this.offset = animationJson.offset;\r\n            if (typeof animationJson.grouping !== 'undefined') {//init grouping\r\n                this.grouping.initGrouping(animationJson.grouping);\r\n            }\r\n\r\n            //translate action specs in the animation Json\r\n            if (typeof animationJson.actions !== 'undefined') {//init actions\r\n                for (let i = 0, actionJson; i < animationJson.actions.length | (actionJson = animationJson.actions[i]); i++) {\r\n                    actionJson.chartIdx = animationJson.chartIdx;\r\n                    let visAttrActionJsonArr = ActionSpec.transToVisualAttrAction(actionJson, animationJson.chartIdx, usedChangedAttrs, ChartSpec.dataTrans);//translate templates to no-templates\r\n                    for (let j = 0, visAttrActionJson; j < visAttrActionJsonArr.length | (visAttrActionJson = visAttrActionJsonArr[j]); j++) {\r\n                        let tmpAction = new ActionSpec();\r\n                        tmpAction.initAction(visAttrActionJson);\r\n                        this.actions.push(tmpAction);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * check if the input json format is illegal\r\n     * @param {JSON obj} animationJson \r\n     */\r\n    checkFormat(animationJson) {\r\n        let keys = Object.keys(animationJson);\r\n        if (keys.includes('selection')) {\r\n            return true;\r\n        }\r\n        alert('illegal format, no \\'selection\\' is defined ');\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * calculate timing for each mark;\r\n     * @param {Array} markIds : array of mark ids\r\n     * @param {Animation} lastAnimation : last animation in order to calculate time\r\n     */\r\n    calAniTime(markIds, lastAnimation) {\r\n        let that = this;\r\n\r\n        //check whether the durations of the actions are set with the data variables\r\n        let durationAttrValues = new Map();\r\n        for (let i = 0, markId; i < markIds.length | (markId = markIds[i]); i++) {\r\n            let tmpAttrValues = new Map();\r\n            for (let j = 0, action; j < this.actions.length | (action = this.actions[j]); j++) {\r\n                if (typeof action.duration === 'object') {\r\n                    let datum = this.domMarks.get(markId)['data-datum'];\r\n                    let value = parseFloat(datum[action.duration.field]);\r\n                    let minDuration = typeof action.duration.minDuration == 'undefined' ? 300 : action.duration.minDuration;\r\n                    tmpAttrValues.set(action.duration.field, [value, minDuration]);\r\n                }\r\n            }\r\n            durationAttrValues.set(markId, tmpAttrValues);\r\n        }\r\n\r\n        //calculate the duration of all actions\r\n        let [actionsDurations, minValueEachAttr, processedActions] = ActionSpec.calActionDuration(this.actions, durationAttrValues, this.domMarks);\r\n\r\n        //order the marks according to \"sort\"\r\n        let marksInOrder = this.grouping.arrangeOrder(markIds, this.domMarks);\r\n\r\n        let markAni = new Map();//the time specs and action specs of each mark, for now using Map, check later to see whether it is worthy to change to Array\r\n        let groupByMap = new Map();//record the result of groupBy. key:markId, value:group reference\r\n\r\n        for (let i = 0, markId; i < marksInOrder.length | (markId = marksInOrder[i]); i++) {\r\n            //record visual status of all marks\r\n            let tmpObj = {};\r\n            for (let j = 0, vAttr; j < Animation.visualAttrs.length | (vAttr = Animation.visualAttrs[j]); j++) {\r\n                if (typeof this.domMarks.get(markId)[vAttr] === 'undefined') {\r\n                    switch (vAttr) {\r\n                        case 'opacity'://give default opacity 1\r\n                            tmpObj[vAttr] = 1;\r\n                            break;\r\n                        case 'width'://use the width of the bounding box \r\n                            tmpObj[vAttr] = this.domMarks.get(markId)['bbWidth'];\r\n                            break;\r\n                        case 'height'://use the height of the bounding box \r\n                            tmpObj[vAttr] = this.domMarks.get(markId)['bbHeight'];\r\n                            break;\r\n                        case 'x'://use the position x of the bounding box \r\n                            tmpObj[vAttr] = this.domMarks.get(markId)['bbX'];\r\n                            break;\r\n                        case 'y'://use the position y of the bounding box \r\n                            tmpObj[vAttr] = this.domMarks.get(markId)['bbY'];\r\n                            break;\r\n                        case 'cx'://use the center of the bounding box \r\n                            tmpObj[vAttr] = this.domMarks.get(markId)['bbX'] + this.domMarks.get(markId)['bbWidth'] / 2;\r\n                            break;\r\n                        case 'cy'://use the center of the bounding box \r\n                            tmpObj[vAttr] = this.domMarks.get(markId)['bbY'] + this.domMarks.get(markId)['bbHeight'] / 2;\r\n                            break;\r\n                        case 'innerRadius'://give default inner radius 0\r\n                            tmpObj[vAttr] = 0\r\n                            break;\r\n                        case 'outterRadius'://use half of the diagonal line of the bounding box\r\n                            tmpObj[vAttr] = Math.sqrt(Math.pow(this.domMarks.get(markId)['bbWidth'] / 2, 2) + Math.pow(this.domMarks.get(markId)['bbHeight'] / 2, 2));\r\n                            break;\r\n                        case 'startAngle':\r\n                            tmpObj[vAttr] = 0;\r\n                            break;\r\n                        case 'endAngle':\r\n                            tmpObj[vAttr] = Math.PI * 2;\r\n                            break;\r\n                    }\r\n                } else {\r\n                    tmpObj[vAttr] = this.domMarks.get(markId)[vAttr];\r\n                }\r\n\r\n                if (tmpObj[vAttr] !== '') {\r\n                    if (typeof Animation.minStatus.get(vAttr) === 'undefined') {\r\n                        Animation.minStatus.set(vAttr, tmpObj[vAttr]);\r\n                    } else {\r\n                        if (parseFloat(Animation.minStatus.get(vAttr)) > parseFloat(tmpObj[vAttr])) {\r\n                            Animation.minStatus.set(vAttr, tmpObj[vAttr]);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            if (typeof Animation.finalStatus.get(markId) === 'undefined') {\r\n                Animation.finalStatus.set(markId, []);\r\n            }\r\n            Animation.finalStatus.get(markId).push(tmpObj);\r\n\r\n            markAni.set(markId, {\r\n                'startTime': 0, //start time of this mark \r\n                'totalDuration': actionsDurations.get(markId), //total duration of all the actions of this mark\r\n                'actionAttrs': [] //action attributes of this mark\r\n            });\r\n\r\n            groupByMap.set(markId, 'allMarks');\r\n        }\r\n\r\n        this.grouping.calTimeInGrouping(markAni, this.domMarks);\r\n\r\n        //update time according to the time spec of animation\r\n        let tmpAllStart = 10000;\r\n        markAni.forEach(function (value, markId) {\r\n            if (value.startTime < tmpAllStart) {\r\n                tmpAllStart = value.startTime;\r\n            }\r\n        })\r\n\r\n        let timeDiff = typeof lastAnimation === 'undefined' ? this.calOffsetTime(0, 0, tmpAllStart, this.domMarks) : this.calOffsetTime(lastAnimation.animationStartTime, lastAnimation.animationEndTime, tmpAllStart, this.domMarks);\r\n\r\n        markAni.forEach(function (value, markId) {\r\n            let tmpObj = { 'startTime': value.startTime + timeDiff.get(markId), 'totalDuration': value.totalDuration, 'actionAttrs': [] };\r\n            if (tmpObj.startTime < that.animationStartTime) {\r\n                that.animationStartTime = tmpObj.startTime;\r\n            }\r\n            if (tmpObj.startTime + tmpObj.totalDuration > that.animationEndTime) {\r\n                that.animationEndTime = tmpObj.startTime + tmpObj.totalDuration;\r\n            }\r\n            for (let i = 0, a; i < processedActions.length | (a = processedActions[i]); i++) {\r\n                let tmpActionSpec = new ActionSpec();\r\n                let keys = Object.keys(a);\r\n                for (let j = 0, attr; j < keys.length | (attr = keys[j]); j++) {\r\n                    tmpActionSpec[attr] = a[attr];\r\n                    if (attr === '_duration' && typeof a[attr] === 'object') {\r\n                        let datum = that.domMarks.get(markId)['data-datum'];\r\n                        let minAttrValue = minValueEachAttr.get(a[attr].field);\r\n                        tmpActionSpec[attr] = a[attr].minDuration * parseFloat(datum[a[attr].field]) / minAttrValue;\r\n                    } else if (attr === 'offsetStart') {\r\n                        tmpActionSpec[attr] = a[attr].get(markId);\r\n                    }\r\n                }\r\n                tmpObj.actionAttrs.push(tmpActionSpec);\r\n            }\r\n\r\n            markAni.set(markId, tmpObj);\r\n        })\r\n\r\n        markAni.forEach(function (value, markId) {\r\n            //update the start time of actions \r\n            for (let i = 0; i < value.actionAttrs.length; i++) {\r\n                value.actionAttrs[i].startTime = value.startTime + value.actionAttrs[i].offsetStart;//absolute start time\r\n            }\r\n\r\n            if (typeof Animation.allMarkAni.get(markId) === 'undefined') {\r\n                Animation.allMarkAni.set(markId, value);\r\n            } else {//merge animation specs for the same mark\r\n                let currentStartTime = Animation.allMarkAni.get(markId).startTime;\r\n                let currentEndTime = currentStartTime + Animation.allMarkAni.get(markId).totalDuration;\r\n                Animation.allMarkAni.get(markId).startTime = currentStartTime < value.startTime ? currentStartTime : value.startTime;\r\n                let tmpEndTime = value.startTime + value.totalDuration;\r\n                currentEndTime = currentEndTime > tmpEndTime ? currentEndTime : tmpEndTime;\r\n                Animation.allMarkAni.get(markId).totalDuration = currentEndTime - Animation.allMarkAni.get(markId).startTime;\r\n                Animation.allMarkAni.get(markId).actionAttrs = [...Animation.allMarkAni.get(markId).actionAttrs, ...value.actionAttrs];\r\n            }\r\n        })\r\n    }\r\n\r\n    /**\r\n     * calculate timing for each action then render animation by slicing the action specs into frames\r\n     */\r\n    static renderAnimation() {\r\n        let that = this;\r\n        this.allMarkAni.forEach(function (value, markId) {\r\n            //record the end time of the entire animation, and record the init status of each mark\r\n            if (that.wholeEndTime < value.startTime + value.totalDuration) {\r\n                that.wholeEndTime = value.startTime + value.totalDuration;\r\n            }\r\n\r\n            //categorize the actions according to the attribute name in order to insert place holder actions\r\n            let maskActionByAttr = new Map(), markActionByAttr = new Map();\r\n            for (let i = 0, item; i < value.actionAttrs.length | (item = value.actionAttrs[i]); i++) {\r\n                if (item.type === ActionSpec.actionTargets.mark) {\r\n                    if (typeof markActionByAttr.get(item.attribute.attrName) === 'undefined') {\r\n                        markActionByAttr.set(item.attribute.attrName, [item]);\r\n                    } else {\r\n                        markActionByAttr.get(item.attribute.attrName).push(item);\r\n                    }\r\n                } else if (item.type === ActionSpec.actionTargets.mask) {\r\n                    if (typeof maskActionByAttr.get(item.attribute.attrName) === 'undefined') {\r\n                        maskActionByAttr.set(item.attribute.attrName, [item]);\r\n                    } else {\r\n                        maskActionByAttr.get(item.attribute.attrName).push(item);\r\n                    }\r\n                } else {\r\n                    console.log('we have some action with no type !!!!!');\r\n                }\r\n            }\r\n\r\n            //add extra action to fill the timeline for both mark and mask\r\n            maskActionByAttr.forEach(function (actionList, attrName) {\r\n                //put an start action\r\n                let tmpAction0 = new ActionSpec();\r\n                tmpAction0.type = ActionSpec.actionTargets.mask;\r\n                tmpAction0.chartIdx = actionList[0].chartIdx;\r\n                tmpAction0.animationType = actionList[0].animationType;\r\n                tmpAction0.startTime = 0;\r\n                tmpAction0.duration = actionList[0].startTime;\r\n                tmpAction0.attribute = {\r\n                    'attrName': actionList[0].attribute.attrName,\r\n                    'from': actionList[0].attribute.from,\r\n                    'to': actionList[0].attribute.from\r\n                }\r\n                value.actionAttrs.push(tmpAction0);\r\n                for (let i = 0; i < actionList.length; i++) {\r\n                    let tmpAction = new ActionSpec();\r\n                    tmpAction.type = ActionSpec.actionTargets.mask;\r\n                    tmpAction.chartIdx = actionList[i].chartIdx;\r\n                    tmpAction.animationType = actionList[i].animationType;\r\n                    tmpAction.startTime = actionList[i].startTime + actionList[i].duration;\r\n                    if (i === actionList.length - 1) {\r\n                        tmpAction.duration = 'wholeEnd';\r\n                    } else {\r\n                        tmpAction.duration = actionList[i + 1].startTime - actionList[i].startTime - actionList[i].duration;\r\n                    }\r\n\r\n                    tmpAction.attribute = {\r\n                        'attrName': actionList[i].attribute.attrName,\r\n                        'from': actionList[i].attribute.to,\r\n                        'to': actionList[i].attribute.to\r\n                    }\r\n                    value.actionAttrs.push(tmpAction);\r\n                }\r\n            })\r\n            markActionByAttr.forEach(function (actionList, attrName) {\r\n                //put an start action\r\n                let tmpAction0 = new ActionSpec();\r\n                tmpAction0.type = ActionSpec.actionTargets.mark;\r\n                tmpAction0.animationType = actionList[0].animationType;\r\n                tmpAction0.startTime = 0;\r\n                tmpAction0.duration = actionList[0].startTime;\r\n                tmpAction0.attribute = {\r\n                    'attrName': actionList[0].attribute.attrName,\r\n                    'from': actionList[0].attribute.from,\r\n                    'to': actionList[0].attribute.from\r\n                }\r\n                value.actionAttrs.push(tmpAction0);\r\n                for (let i = 0; i < actionList.length; i++) {\r\n                    let tmpAction = new ActionSpec();\r\n                    tmpAction.type = ActionSpec.actionTargets.mark;\r\n                    tmpAction.animationType = actionList[i].animationType;\r\n                    tmpAction.startTime = actionList[i].startTime + actionList[i].duration;\r\n                    if (i === actionList.length - 1) {\r\n                        tmpAction.duration = 'wholeEnd';\r\n                    } else {\r\n                        tmpAction.duration = actionList[i + 1].startTime - actionList[i].startTime - actionList[i].duration;\r\n                    }\r\n\r\n                    tmpAction.attribute = {\r\n                        'attrName': actionList[i].attribute.attrName,\r\n                        'from': actionList[i].attribute.to,\r\n                        'to': actionList[i].attribute.to\r\n                    }\r\n                    value.actionAttrs.push(tmpAction);\r\n                }\r\n            })\r\n        })\r\n        console.log('The duration of the generated animation is: ' + this.wholeEndTime + 'ms');\r\n\r\n        //replace the 'wholeEnd' place holder in duration\r\n        this.allMarkAni.forEach(function (value, a) {\r\n            for (let i = 0, item; i < value.actionAttrs.length | (item = value.actionAttrs[i]); i++) {\r\n                if (item.duration === 'wholeEnd') {\r\n                    item.duration = that.wholeEndTime - item.startTime;\r\n                }\r\n            }\r\n        })\r\n    }\r\n\r\n    static renderFrame(timePoint) {\r\n        let frame = [];//store the visual status of each mark at this time\r\n        this.allMarkAni.forEach(function (value, markId) {\r\n            let currentStatus = new Map();\r\n            for (let i = 0, a; i < value.actionAttrs.length | (a = value.actionAttrs[i]); i++) {\r\n                if (a.attribute.from === a.attribute.to && a.duration === 0) {//nothing happends in this actionspec, skip it\r\n                    continue;\r\n                }\r\n                let resultValue = Animation.calAttrValue(a, markId, timePoint), lastValue = timePoint >= 0 ? Animation.calAttrValue(a, markId, timePoint - 1) : '';\r\n                if (resultValue !== lastValue) {\r\n                    if (a.startTime <= timePoint && a.startTime + a.duration >= timePoint) {//during this action\r\n                        currentStatus.set(a.attribute.attrName, { 'type': a.type, 'animationType': a.animationType, 'endTime': a.startTime + a.duration, 'attrName': a.attribute.attrName, 'value': resultValue });\r\n                    } else if (a.startTime + a.duration < timePoint) {\r\n                        if (typeof currentStatus.get(a.attribute.attrName) !== 'undefined') {\r\n                            if (currentStatus.get(a.attribute.attrName).endTime < a.startTime + a.duration) {\r\n                                currentStatus.set(a.attribute.attrName, { 'type': a.type, 'animationType': a.animationType, 'endTime': a.startTime + a.duration, 'attrName': a.attribute.attrName, 'value': resultValue });\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            if (currentStatus.size > 0) {\r\n                frame.push([markId, currentStatus]);\r\n            }\r\n        })\r\n        return frame;\r\n    }\r\n\r\n    static calAttrValue(a, markId, timePoint) {\r\n        let resultValue, chartIdx = a.chartIdx;\r\n\r\n        if (a.startTime <= timePoint && a.startTime + a.duration >= timePoint) {//during this action\r\n            let percentage = parseFloat(timePoint - a.startTime) / parseFloat(a.duration);\r\n            let ratio = this.calRatio(percentage, a.easing);\r\n            switch (a.attribute.attrName) {\r\n                case 'fill':\r\n                case 'stroke':\r\n                    if (a.type === ActionSpec.actionTargets.mark) {\r\n                        if (Array.isArray(a.attribute.to)) {\r\n                            let fromColor;\r\n                            let toColor;\r\n                            for (let j = 0; j < a.attribute.to.length; j++) {\r\n                                if (a.attribute.to[j][0] === markId && typeof a.attribute.to[j][1] === 'string') {\r\n                                    fromColor = a.attribute.from[j][1];\r\n                                    toColor = a.attribute.to[j][1];\r\n                                    break;\r\n                                }\r\n                            }\r\n                            let fromRGB = Util.color2RGB(fromColor), toRGB = Util.color2RGB(toColor);\r\n                            let valueR = parseInt((toRGB[0] - fromRGB[0]) * ratio) + fromRGB[0];\r\n                            let valueG = parseInt((toRGB[1] - fromRGB[1]) * ratio) + fromRGB[1];\r\n                            let valueB = parseInt((toRGB[2] - fromRGB[2]) * ratio) + fromRGB[2];\r\n                            resultValue = 'rgb(' + valueR + ',' + valueG + ',' + valueB + ')';\r\n                        }\r\n                    }\r\n                    break;\r\n                case 'textContent':\r\n                    if (a.type === ActionSpec.actionTargets.mark) {\r\n                        if (Array.isArray(a.attribute.to)) {\r\n                            let startValue = 0;\r\n                            for (let j = 0; j < a.attribute.to.length; j++) {\r\n                                if (a.attribute.to[j][0] === markId && (!isNaN(a.attribute.to[j][1]) || typeof a.attribute.to[j][1] === 'string')) {\r\n                                    startValue = a.attribute.to[j][1];\r\n                                    break;\r\n                                }\r\n                            }\r\n                            resultValue = startValue;\r\n                        }\r\n                    }\r\n                    break;\r\n                case 'width':\r\n                case 'height':\r\n                case 'r':\r\n                    if (a.type === ActionSpec.actionTargets.mark) {\r\n                        if (Array.isArray(a.attribute.to)) {\r\n                            let startValue = 0;\r\n                            let finalValue = 0;\r\n                            for (let j = 0; j < a.attribute.to.length; j++) {\r\n                                if (a.attribute.to[j][0] === markId && !isNaN(a.attribute.from[j][1]) && !isNaN(a.attribute.to[j][1])) {\r\n                                    startValue = a.attribute.from[j][1];\r\n                                    finalValue = a.attribute.to[j][1];\r\n                                    break;\r\n                                }\r\n                            }\r\n                            resultValue = startValue + (finalValue - startValue) * ratio;\r\n                        } else {\r\n                            let startValue = 0;\r\n                            let finalValue = parseFloat(this.finalStatus.get(markId)[chartIdx][a.attribute.attrName]);\r\n                            resultValue = startValue - (parseFloat(a.attribute.to - a.attribute.from) * ratio + a.attribute.from) * (startValue - finalValue);\r\n                        }\r\n                    } else {\r\n                        let startValue = parseFloat(this.minStatus.get(a.attribute.attrName));\r\n                        let finalValue = parseFloat(this.finalStatus.get(markId)[chartIdx][a.attribute.attrName]);\r\n                        if (startValue < 0) {\r\n                            resultValue = startValue + (parseFloat(a.attribute.to - a.attribute.from) * ratio + a.attribute.from) * (finalValue - startValue);\r\n                        } else {\r\n                            resultValue = (parseFloat(a.attribute.to - a.attribute.from) * ratio + a.attribute.from) * finalValue;\r\n                        }\r\n                    }\r\n                    break;\r\n                case 'y':\r\n                case 'y1':\r\n                case 'y2':\r\n                case 'cy':\r\n                    if (a.type === ActionSpec.actionTargets.mark) {\r\n                        if (Array.isArray(a.attribute.to)) {\r\n                            let startValue = 0;\r\n                            let finalValue = 0;\r\n                            for (let j = 0; j < a.attribute.to.length; j++) {\r\n                                if (a.attribute.to[j][0] === markId && !isNaN(a.attribute.from[j][1]) && !isNaN(a.attribute.to[j][1])) {\r\n                                    startValue = a.attribute.from[j][1];\r\n                                    finalValue = a.attribute.to[j][1];\r\n                                    break;\r\n                                }\r\n                            }\r\n                            resultValue = startValue + (finalValue - startValue) * ratio;\r\n                        } else {\r\n                            let startValue = this.startY;\r\n                            let finalValue = parseFloat(this.finalStatus.get(markId)[chartIdx][a.attribute.attrName]);\r\n                            resultValue = startValue - (parseFloat(a.attribute.to - a.attribute.from) * ratio + a.attribute.from) * (startValue - finalValue);\r\n                        }\r\n                    } else if (a.type === ActionSpec.actionTargets.mask) {\r\n                        resultValue = parseFloat(this.finalStatus.get(markId)[chartIdx][a.attribute.attrName]) - 1 + (parseFloat(a.attribute.to - a.attribute.from) * ratio + a.attribute.from) * (parseFloat(this.finalStatus.get(markId)[chartIdx]['height']) + 2);\r\n                    }\r\n                    break;\r\n                case 'x':\r\n                case 'x1':\r\n                case 'x2':\r\n                case 'cx':\r\n                    if (a.type === ActionSpec.actionTargets.mark) {\r\n                        if (Array.isArray(a.attribute.to)) {//changing from one status to the other\r\n                            let startValue = 0;\r\n                            let finalValue = 0;\r\n                            for (let j = 0; j < a.attribute.to.length; j++) {\r\n                                if (a.attribute.to[j][0] === markId && !isNaN(a.attribute.from[j][1]) && !isNaN(a.attribute.to[j][1])) {\r\n                                    startValue = a.attribute.from[j][1];\r\n                                    finalValue = a.attribute.to[j][1];\r\n                                    break;\r\n                                }\r\n                            }\r\n                            resultValue = startValue + (finalValue - startValue) * ratio;\r\n                        } else {//marks entering charts\r\n                            let startValue = this.startX;\r\n                            let finalValue = parseFloat(this.finalStatus.get(markId)[chartIdx][a.attribute.attrName]);\r\n                            resultValue = startValue + (parseFloat(a.attribute.to - a.attribute.from) * ratio + a.attribute.from) * (finalValue - startValue);\r\n                        }\r\n                    } else if (a.type === ActionSpec.actionTargets.mask) {\r\n                        resultValue = parseFloat(this.finalStatus.get(markId)[chartIdx][a.attribute.attrName]) - 1 + (parseFloat(a.attribute.to - a.attribute.from) * ratio + a.attribute.from) * (parseFloat(this.finalStatus.get(markId)[chartIdx]['width']) + 2);\r\n                    }\r\n                    break;\r\n                case 'startAngle':\r\n                    let startAngle = parseFloat(this.finalStatus.get(markId)[chartIdx].startAngle);\r\n                    let endAngle = parseFloat(this.finalStatus.get(markId)[chartIdx].endAngle);\r\n\r\n                    let _startAngle = startAngle < 0 ? startAngle + 2 * Math.PI : startAngle;\r\n                    let _endAngle = endAngle < 0 || _startAngle > endAngle ? endAngle + 2 * Math.PI : endAngle;\r\n\r\n                    let tmpAngle;\r\n                    if (_endAngle > _startAngle) {\r\n                        tmpAngle = _startAngle + (parseFloat(a.attribute.to - a.attribute.from) * ratio + a.attribute.from) * (_endAngle - _startAngle);\r\n                    } else {\r\n                        tmpAngle = _startAngle + (parseFloat(a.attribute.to - a.attribute.from) * ratio + a.attribute.from) * (Math.PI * 2 - _startAngle + _endAngle);\r\n                    }\r\n\r\n                    resultValue = {\r\n                        'cx': parseFloat(this.finalStatus.get(markId)[chartIdx]['cx']),\r\n                        'cy': parseFloat(this.finalStatus.get(markId)[chartIdx]['cy']),\r\n                        'innerRadius': parseFloat(this.finalStatus.get(markId)[chartIdx]['innerRadius']),\r\n                        'outterRadius': parseFloat(this.finalStatus.get(markId)[chartIdx]['outterRadius']) + 2,\r\n                        'startAngle': tmpAngle,\r\n                        'endAngle': parseFloat(this.finalStatus.get(markId)[chartIdx]['endAngle'])\r\n                    }\r\n                    break;\r\n                case 'innerRadius':\r\n                    let startRadius = parseFloat(this.finalStatus.get(markId)[chartIdx]['innerRadius']);\r\n                    let endRadius = parseFloat(this.finalStatus.get(markId)[chartIdx]['outterRadius']);\r\n                    let tmpRadius = (parseFloat(a.attribute.to - a.attribute.from) * ratio + a.attribute.from) * (endRadius - startRadius);\r\n                    if (tmpRadius < 0) {\r\n                        resultValue = {\r\n                            'cx': parseFloat(this.finalStatus.get(markId)[chartIdx]['cx']),\r\n                            'cy': parseFloat(this.finalStatus.get(markId)[chartIdx]['cy']),\r\n                            'innerRadius': parseFloat(this.finalStatus.get(markId)[chartIdx]['innerRadius']) + 2,\r\n                            'outterRadius': parseFloat(this.finalStatus.get(markId)[chartIdx]['outterRadius']) - tmpRadius + 2,\r\n                            'startAngle': parseFloat(this.finalStatus.get(markId)[chartIdx]['startAngle']),\r\n                            'endAngle': parseFloat(this.finalStatus.get(markId)[chartIdx]['endAngle'])\r\n                        }\r\n                    } else {\r\n                        resultValue = {\r\n                            'cx': parseFloat(this.finalStatus.get(markId)[chartIdx]['cx']),\r\n                            'cy': parseFloat(this.finalStatus.get(markId)[chartIdx]['cy']),\r\n                            'innerRadius': parseFloat(this.finalStatus.get(markId)[chartIdx]['innerRadius']) + tmpRadius + 2,\r\n                            'outterRadius': parseFloat(this.finalStatus.get(markId)[chartIdx]['outterRadius']) + 2,\r\n                            'startAngle': parseFloat(this.finalStatus.get(markId)[chartIdx]['startAngle']),\r\n                            'endAngle': parseFloat(this.finalStatus.get(markId)[chartIdx]['endAngle'])\r\n                        }\r\n                    }\r\n                    break;\r\n                case 'stroke-dashoffset':\r\n                    let startDashOffset = 0;\r\n                    let finalDashOffset = parseFloat(this.finalStatus.get(markId)[chartIdx]['stroke-dasharray']);\r\n                    resultValue = startDashOffset - (parseFloat(a.attribute.to - a.attribute.from) * ratio + a.attribute.from) * (startDashOffset - finalDashOffset);\r\n                    break;\r\n                case 'd':\r\n                    if (a.type === ActionSpec.actionTargets.mark) {\r\n                        if (Array.isArray(a.attribute.to)) {//changing from one status to the other\r\n                            let startValue = '', finalValue = '', startDiscretVal = '', finalDiscretVal = '';\r\n                            for (let j = 0; j < a.attribute.to.length; j++) {\r\n                                if (a.attribute.to[j][0] === markId && a.attribute.from[j][1] && a.attribute.to[j][1]) {\r\n                                    startValue = a.attribute.from[j][1];\r\n                                    finalValue = a.attribute.to[j][1];\r\n                                    startDiscretVal = a.attribute.from[j][2];\r\n                                    finalDiscretVal = a.attribute.to[j][2];\r\n                                    break;\r\n                                }\r\n                            }\r\n                            resultValue = Util.calTransD(startValue, finalValue, ratio, startDiscretVal, finalDiscretVal);\r\n                        }\r\n                    }\r\n                    break;\r\n                default://numeric attribute values\r\n                    let startValue = parseFloat(this.minStatus.get(a.attribute.attrName));\r\n                    let finalValue = parseFloat(this.finalStatus.get(markId)[chartIdx][a.attribute.attrName]);\r\n                    if (startValue < 0) {\r\n                        resultValue = startValue + (parseFloat(a.attribute.to - a.attribute.from) * ratio + a.attribute.from) * (finalValue - startValue);\r\n                    } else {\r\n                        resultValue = (parseFloat(a.attribute.to - a.attribute.from) * ratio + a.attribute.from) * finalValue;\r\n                    }\r\n            }\r\n        } else if (a.startTime + a.duration < timePoint) {//past actions\r\n            switch (a.attribute.attrName) {\r\n                case 'fill':\r\n                case 'stroke':\r\n                    if (a.type === ActionSpec.actionTargets.mark) {\r\n                        if (Array.isArray(a.attribute.to)) {\r\n                            for (let j = 0; j < a.attribute.to.length; j++) {\r\n                                if (a.attribute.to[j][0] === markId && typeof a.attribute.to[j][1] === 'string') {\r\n                                    resultValue = a.attribute.to[j][1];\r\n                                    break;\r\n                                }\r\n                            }\r\n                        } else {\r\n                            resultValue = this.finalStatus.get(markId)[chartIdx][a.attribute.attrName];\r\n                        }\r\n                    }\r\n                    break;\r\n                case 'textContent':\r\n                    if (a.type === ActionSpec.actionTargets.mark) {\r\n                        if (Array.isArray(a.attribute.to)) {\r\n                            let startValue = 0;\r\n                            for (let j = 0; j < a.attribute.to.length; j++) {\r\n                                if (a.attribute.to[j][0] === markId && (!isNaN(a.attribute.to[j][1]) || typeof a.attribute.to[j][1] === 'string')) {\r\n                                    startValue = a.attribute.to[j][1];\r\n                                    break;\r\n                                }\r\n                            }\r\n                            resultValue = startValue;\r\n                        }\r\n                    }\r\n                    break;\r\n                case 'width':\r\n                case 'height':\r\n                case 'r':\r\n                    if (a.type === ActionSpec.actionTargets.mark) {\r\n                        if (Array.isArray(a.attribute.to)) {//changing from one status to the other\r\n                            let finalValue = 0;\r\n                            for (let j = 0; j < a.attribute.to.length; j++) {\r\n                                if (a.attribute.to[j][0] === markId) {\r\n                                    finalValue = a.attribute.to[j][1];\r\n                                    break;\r\n                                }\r\n                            }\r\n                            resultValue = finalValue;\r\n                        } else {\r\n                            resultValue = parseFloat(this.finalStatus.get(markId)[chartIdx][a.attribute.attrName]);\r\n                        }\r\n                    } else {\r\n                        resultValue = parseFloat(this.finalStatus.get(markId)[chartIdx][a.attribute.attrName]);\r\n                    }\r\n                    break;\r\n                case 'y':\r\n                case 'y1':\r\n                case 'y2':\r\n                case 'cy':\r\n                    if (a.type === ActionSpec.actionTargets.mark) {\r\n                        if (Array.isArray(a.attribute.to)) {//changing from one status to the other\r\n                            let finalValue = 0;\r\n                            for (let j = 0; j < a.attribute.to.length; j++) {\r\n                                if (a.attribute.to[j][0] === markId) {\r\n                                    finalValue = a.attribute.to[j][1];\r\n                                    break;\r\n                                }\r\n                            }\r\n                            resultValue = finalValue;\r\n                        } else {\r\n                            resultValue = parseFloat(this.finalStatus.get(markId)[chartIdx][a.attribute.attrName]);\r\n                        }\r\n                    } else if (a.type === ActionSpec.actionTargets.mask) {\r\n                        resultValue = parseFloat(this.finalStatus.get(markId)[chartIdx][a.attribute.attrName]) + parseFloat(this.finalStatus.get(markId)[chartIdx]['height']);\r\n                    }\r\n                    break;\r\n                case 'x':\r\n                case 'x1':\r\n                case 'x2':\r\n                case 'cx':\r\n                    if (a.type === ActionSpec.actionTargets.mark) {\r\n                        if (Array.isArray(a.attribute.to)) {//changing from one status to the other\r\n                            let finalValue = 0;\r\n                            for (let j = 0; j < a.attribute.to.length; j++) {\r\n                                if (a.attribute.to[j][0] === markId) {\r\n                                    finalValue = a.attribute.to[j][1];\r\n                                    break;\r\n                                }\r\n                            }\r\n                            resultValue = finalValue;\r\n                        } else {\r\n                            resultValue = parseFloat(this.finalStatus.get(markId)[chartIdx][a.attribute.attrName]);\r\n                        }\r\n                    } else if (a.type === ActionSpec.actionTargets.mask) {\r\n                        resultValue = parseFloat(this.finalStatus.get(markId)[chartIdx][a.attribute.attrName]) + parseFloat(this.finalStatus.get(markId)[chartIdx]['height']);\r\n                    }\r\n                    break;\r\n                case 'startAngle':\r\n                case 'innerRadius':\r\n                    resultValue = {\r\n                        'cx': parseFloat(this.finalStatus.get(markId)[chartIdx]['cx']),\r\n                        'cy': parseFloat(this.finalStatus.get(markId)[chartIdx]['cy']),\r\n                        'innerRadius': parseFloat(this.finalStatus.get(markId)[chartIdx]['innerRadius']),\r\n                        'outterRadius': parseFloat(this.finalStatus.get(markId)[chartIdx]['outterRadius']),\r\n                        'startAngle': parseFloat(this.finalStatus.get(markId)[chartIdx]['startAngle']),\r\n                        'endAngle': parseFloat(this.finalStatus.get(markId)[chartIdx]['endAngle'])\r\n                    }\r\n                    break;\r\n                default://numeric attribute values\r\n                    resultValue = parseFloat(this.finalStatus.get(markId)[chartIdx][a.attribute.attrName]);\r\n            }\r\n        }\r\n        return resultValue;\r\n    }\r\n\r\n    static calRatio(percentage, easingType) {\r\n        let ratio = 0;\r\n        switch (easingType) {\r\n            case ActionSpec.easingType.easeLinear:\r\n                ratio = percentage;\r\n                break;\r\n            case ActionSpec.easingType.easeInQuad:\r\n                ratio = this.easeFuncs.easeInQuad(percentage);\r\n                break;\r\n            case ActionSpec.easingType.easeOutQuad:\r\n                ratio = this.easeFuncs.easeOutQuad(percentage);\r\n                break;\r\n            case ActionSpec.easingType.easeInOutQuad:\r\n                ratio = this.easeFuncs.easeInOutQuad(percentage);\r\n                break;\r\n            case ActionSpec.easingType.easeInCubic:\r\n                ratio = this.easeFuncs.easeInCubic(percentage);\r\n                break;\r\n            case ActionSpec.easingType.easeOutCubic:\r\n                ratio = this.easeFuncs.easeOutCubic(percentage);\r\n                break;\r\n            case ActionSpec.easingType.easeInOutCubic:\r\n                ratio = this.easeFuncs.easeInOutCubic(percentage);\r\n                break;\r\n            case ActionSpec.easingType.easeOutBounce:\r\n                ratio = this.easeFuncs.easeOutBounce(percentage);\r\n                break;\r\n\r\n        }\r\n        return ratio;\r\n    }\r\n\r\n    static resetAll() {\r\n        this.wholeEndTime = 0;\r\n        this.allMarkAni.clear();\r\n        this.minStatus.clear();\r\n        this.finalStatus.clear();\r\n        this.frames.clear();\r\n    }\r\n\r\n}\r\n\r\nAnimation.visualAttrs = ['x', 'y', 'cx', 'cy', 'innerRadius', 'outterRadius', 'startAngle', 'endAngle', 'width', 'height', 'opacity', 'fill', 'stroke', 'content', 'stroke-dasharray', 'stroke-dashoffset'];\r\nAnimation.startY = 0;//start coord of Y\r\nAnimation.startX = 0;//start coord of X\r\nAnimation.endX = 0;//end coord of X\r\nAnimation.wholeEndTime = 0;\r\nAnimation.minStatus = new Map();//record the min value of each attribute.\r\nAnimation.finalStatus = new Map();//record the final visual status of each mark, eg: key:mark1, value: {opacity: 1, height: 226}\r\nAnimation.allMarkAni = new Map();\r\nAnimation.frames = new Map();//output frames\r\nAnimation.easeFuncs = {\r\n    easeInQuad: (p) => {\r\n        return p * p;\r\n    },\r\n    easeOutQuad: (p) => {\r\n        return - p * (p - 2);\r\n    },\r\n    easeInOutQuad: (p) => {\r\n        if ((p / 2) < 1) return 1 / 2 * p * p;\r\n        return - ((--p) * (p - 2) - 1) / 2;\r\n    },\r\n    easeInCubic: (p) => {\r\n        return p * p * p;\r\n    },\r\n    easeOutCubic: (p) => {\r\n        return (p = p - 1) * p * p + 1;\r\n    },\r\n    easeInOutCubic: (p) => {\r\n        if ((p /= 0.5) < 1) return p * p * p / 2;\r\n        return ((p -= 2) * p * p + 2) / 2;\r\n    },\r\n    easeOutBounce: (p) => {\r\n        let ratio = 0;\r\n        if (p < (1 / 2.75)) {\r\n            ratio = 7.5625 * p * p;\r\n        } else if (p < (2 / 2.75)) {\r\n            ratio = 7.5625 * (p -= (1.5 / 2.75)) * p + 0.75;\r\n        } else if (p < (2.5 / 2.75)) {\r\n            ratio = 7.5625 * (p -= (2.25 / 2.75)) * p + 0.9375;\r\n        } else {\r\n            ratio = 7.5625 * (p -= (2.625 / 2.75)) * p + 0.984375;\r\n        }\r\n        return ratio;\r\n    }\r\n}\r\n\r\nexport default Animation;","import Util from \"./util/Util\";\r\nimport FacetSpec from \"./FacetSpec\";\r\n\r\nclass ChartSpec {\r\n    constructor(id, source) {\r\n        this.id = id;\r\n        this.source = source;\r\n    }\r\n\r\n    static loadCharts(chartSpecs, facet) {\r\n        let nameCharts = new Map();\r\n        ChartSpec.charts = [];\r\n        let nullCharts = [];\r\n        for (let i = 0; i < chartSpecs.length; i++) {\r\n            let xhr = new XMLHttpRequest(),\r\n                okStatus = document.location.protocol === \"file:\" ? 0 : 200,\r\n                svgContent;\r\n            xhr.open('GET', chartSpecs[i].source, false);\r\n            xhr.overrideMimeType(\"text/html;charset=utf-8\");\r\n            xhr.send(null);\r\n            if (xhr.status === okStatus) {\r\n                let tmpDiv = document.createElement('div');\r\n                tmpDiv.innerHTML = xhr.responseText;\r\n                svgContent = tmpDiv.children[0];\r\n                ChartSpec.charts.push(svgContent);\r\n                nameCharts.set(chartSpecs[i].id, ChartSpec.charts.length - 1);\r\n            } else if (xhr.status === 404) {\r\n                nullCharts.unshift(i);\r\n                console.log('can not find ' + chartSpecs[i].source + ' ! Please check the url.');\r\n            }\r\n        }\r\n\r\n        //remove the empty charts \r\n        for (let i = 0; i < nullCharts.length; i++) {\r\n            chartSpecs.slice(nullCharts[i], 1);\r\n        }\r\n\r\n        //generate chart facets\r\n        if (typeof facet !== 'undefined') {\r\n            ChartSpec.facetViews(nameCharts, facet);\r\n        }\r\n    }\r\n\r\n    static removeTransAndMerge() {\r\n        for (let i = 0; i < ChartSpec.charts.length; i++) {\r\n            ChartSpec.charts[i].setAttribute('trans', '0,0');\r\n            ChartSpec.removeTransitions(ChartSpec.charts[i].children[0]);\r\n        }\r\n        let resultChart = ChartSpec.mergeCharts();\r\n\r\n        return resultChart;\r\n    }\r\n\r\n    static facetViews(nameCharts, facet) {\r\n        if (facet.views.length > 0) {\r\n            let chartsToCombine = [];\r\n            for (let i = 0; i < facet.views[0].length; i++) {\r\n                let tmpRecorder = [];\r\n                for (let j = 0; j < facet.views.length; j++) {\r\n                    let chartName = facet.views[j][i];\r\n                    if (typeof nameCharts.get(chartName) !== 'undefined') {\r\n                        tmpRecorder.push(ChartSpec.charts[nameCharts.get(chartName)].cloneNode(true));\r\n                    } else {\r\n                        console.log('chart name ' + chartName + ' is undefined !');\r\n                    }\r\n                }\r\n                if (tmpRecorder.length === facet.views.length) {\r\n                    chartsToCombine.push(tmpRecorder);\r\n                }\r\n            }\r\n            ChartSpec.combineCharts(facet.type, facet.views.length, chartsToCombine);\r\n        }\r\n    }\r\n\r\n    static combineCharts(facetType, facetNum, chartsToCombine) {\r\n        let resultCharts = [];\r\n        let chartMargin = 20;\r\n        for (let i = 0; i < chartsToCombine.length; i++) {\r\n            let tmpCharts = chartsToCombine[i];\r\n            let oriWidth = parseFloat(tmpCharts[0].getAttribute('width'));\r\n            let oriHeight = parseFloat(tmpCharts[0].getAttribute('height'));\r\n            let viewBoxNums = tmpCharts[0].getAttribute('viewBox').split(' ');\r\n            let viewBoxW = parseFloat(viewBoxNums[2]);\r\n            let viewBoxH = parseFloat(viewBoxNums[3]);\r\n\r\n            let chartTransForm = Util.getTransformAttrs(tmpCharts[0].children[0]);\r\n            tmpCharts[0].children[0].setAttribute('transform', 'translate(' + chartTransForm.transNums[0] + ',' + chartTransForm.transNums[1] + ') ' + 'scale(' + chartTransForm.scaleNum / facetNum + ')');\r\n            switch (facetType) {\r\n                case FacetSpec.facetType.row:\r\n                    tmpCharts[0].setAttribute('height', oriHeight + chartMargin * tmpCharts.length);\r\n                    tmpCharts[0].setAttribute('viewBox', '0 0 ' + viewBoxW + ' ' + (viewBoxH + chartMargin * tmpCharts.length));\r\n                    break;\r\n                case FacetSpec.facetType.col:\r\n                    tmpCharts[0].setAttribute('width', oriWidth + chartMargin * tmpCharts.length);\r\n                    tmpCharts[0].setAttribute('viewBox', '0 0 ' + (viewBoxW + chartMargin * tmpCharts.length) + ' ' + viewBoxH);\r\n                    break;\r\n            }\r\n\r\n            for (let j = 0; j < tmpCharts.length; j++) {\r\n                let tmpChart = tmpCharts[j];\r\n                let tmpMarks = tmpChart.querySelectorAll('.mark');\r\n                [].forEach.call(tmpMarks, (m) => {\r\n                    let idNum = parseInt(m.getAttribute('id').substring(4));\r\n                    m.setAttribute('id', 'mark' + (idNum + j * 100000));\r\n                    m.classList.add('facet' + j);\r\n                })\r\n                if (j > 0) {//put the marks in the following charts to the 1st chart\r\n                    let chartContentG = tmpChart.children[0];\r\n                    let chartChildren = chartContentG.children;\r\n                    for (let m = 0; m < chartChildren.length; m++) {\r\n                        let tmpDom = chartChildren[m];\r\n                        let transformAttrs = Util.getTransformAttrs(tmpDom);\r\n                        switch (facetType) {\r\n                            case FacetSpec.facetType.row:\r\n                                tmpDom.setAttribute('transform', 'translate(' + transformAttrs.transNums[0] + ',' + (transformAttrs.transNums[1] + (viewBoxH + chartMargin) * j) + ') ' + 'scale(' + transformAttrs.scaleNum + ')');\r\n                                break;\r\n                            case FacetSpec.facetType.col:\r\n                                tmpDom.setAttribute('transform', 'translate(' + (transformAttrs.transNums[0] + (viewBoxW + chartMargin) * j) + ',' + transformAttrs.transNums[1] + ') ' + 'scale(' + transformAttrs.scaleNum + ')');\r\n                                break;\r\n                        }\r\n                        tmpCharts[0].children[0].appendChild(tmpDom);\r\n                    }\r\n                }\r\n            }\r\n            resultCharts.push(tmpCharts[0]);\r\n        }\r\n        ChartSpec.charts = resultCharts;\r\n    }\r\n\r\n    static mergeCharts() {\r\n        let allMarks = new Set();\r\n        let markStatus = new Map();\r\n        let markTempletes = new Map();\r\n        let attrNames = ['x', 'y', 'cx', 'cy', 'x1', 'y1', 'x2', 'y2', 'd', 'r', 'width', 'height', 'textContent', 'fill', 'stroke'];\r\n        let nullStatus = {};\r\n        for (let j = 0; j < attrNames.length; j++) {\r\n            nullStatus[attrNames[j]] = null;\r\n        }\r\n        for (let i = 0; i < ChartSpec.charts.length; i++) {\r\n            let tmpChart = ChartSpec.charts[i];\r\n            let marks = tmpChart.querySelectorAll('.mark');\r\n            if (marks.length > 0) {\r\n                [].forEach.call(marks, (m) => {\r\n                    let markId = m.getAttribute('id');\r\n                    allMarks.add(markId);\r\n                    let statusObj = {};//status of one mark in chart i\r\n                    for (let j = 0; j < attrNames.length; j++) {\r\n                        if (attrNames[j] === 'textContent') {\r\n                            statusObj[attrNames[j]] = m.innerHTML;\r\n                        } else {\r\n                            statusObj[attrNames[j]] = m.getAttribute(attrNames[j]);\r\n                        }\r\n                    }\r\n                    if (typeof markStatus.get(markId) === 'undefined') {\r\n                        markStatus.set(markId, new Array(ChartSpec.charts.length).fill(nullStatus));\r\n                    }\r\n\r\n                    markStatus.get(markId)[i] = statusObj;\r\n                    markTempletes.set(markId, m.outerHTML);\r\n                })\r\n            }\r\n        }\r\n\r\n        //find the changed attributes\r\n        ChartSpec.changedAttrs = [];\r\n        let attrNamesCopy = Util.deepClone(attrNames);\r\n        markStatus.forEach(function (statusArr, markId) {\r\n            for (let i = 0; i < attrNamesCopy.length; i++) {\r\n                let flag = true;\r\n                let compareStatus;\r\n                for (let j = 0; j < statusArr.length; j++) {\r\n                    if (typeof statusArr[j] !== 'undefined') {\r\n                        compareStatus = statusArr[j];\r\n                        break;\r\n                    }\r\n                }\r\n                for (let j = 0; j < statusArr.length; j++) {\r\n                    if (typeof statusArr[j] !== 'undefined') {\r\n                        if (statusArr[j][attrNamesCopy[i]] !== compareStatus[attrNamesCopy[i]]) {\r\n                            ChartSpec.changedAttrs.push(attrNamesCopy[i]);\r\n                            flag = false;\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n                if (!flag) {\r\n                    attrNamesCopy.splice(i, 1);\r\n                    break;\r\n                }\r\n            }\r\n        })\r\n\r\n        //find different cmds if there is d in changedAttrs\r\n        let diffCmds = new Map();//key:cmd name, value: {cmdIdx, diffAttrIdxs}\r\n        if (ChartSpec.changedAttrs.indexOf('d') >= 0) {\r\n            diffCmds = Util.findDiffCmds(markStatus);\r\n        }\r\n\r\n        //add missing marks to each chart\r\n        allMarks = Array.from(allMarks);\r\n        ChartSpec.markDoms.clear();\r\n        for (let i = 0; i < ChartSpec.charts.length; i++) {\r\n            for (let j = 0; j < allMarks.length; j++) {\r\n                if (ChartSpec.charts[i].querySelectorAll('#' + allMarks[j]).length === 0) {//chart i does not have mark j\r\n                    let markStr = markTempletes.get(allMarks[j]);\r\n                    let tmpDiv = document.createElement('div');\r\n                    tmpDiv.innerHTML = markStr;\r\n                    let mark = tmpDiv.children[0];\r\n                    let statusObj = {};\r\n                    //set the changed attributes to the init state\r\n                    for (let a = 0; a < ChartSpec.changedAttrs.length; a++) {\r\n                        if (ChartSpec.changedAttrs[a] === 'y' && ChartSpec.changedAttrs.indexOf('height') >= 0) {\r\n                            let targetValue = parseFloat(mark.getAttribute('y')) + parseFloat(mark.getAttribute('height'));\r\n                            mark.setAttribute('y', targetValue);\r\n                            statusObj.y = targetValue;\r\n                        } else if (ChartSpec.changedAttrs[a] === 'd') {\r\n                            let resultD;\r\n                            if (mark.getAttribute('d')) {\r\n                                resultD = Util.setPathDValue(mark.getAttribute('d'), true, 0, 0, diffCmds);\r\n                            }\r\n                            mark.setAttribute('d', resultD);\r\n                            statusObj.d = resultD;\r\n                        } else if (ChartSpec.changedAttrs[a] === 'textContent') {\r\n                            mark.innerHTML = '';\r\n                            statusObj.textContent = '';\r\n                        } else if (ChartSpec.changedAttrs[a] === 'fill' || ChartSpec.changedAttrs[a] === 'stroke') {\r\n                            if (typeof mark.getAttribute(ChartSpec.changedAttrs[a]) === 'undefined') {\r\n                                mark.setAttribute(ChartSpec.changedAttrs[a], '#FFFFFF');\r\n                            }\r\n                            statusObj[ChartSpec.changedAttrs[a]] = mark.getAttribute(ChartSpec.changedAttrs[a]);\r\n                        } else {\r\n                            if (['x', 'y', 'cx', 'cy', 'x1', 'y1', 'x2', 'y2'].includes(ChartSpec.changedAttrs[a])) {\r\n                                if (ChartSpec.changedAttrs[a] === 'x2') {\r\n                                    mark.setAttribute('x2', parseFloat(mark.getAttribute('x1')));\r\n                                    statusObj['x2'] = parseFloat(mark.getAttribute('x1'));\r\n                                } else if (ChartSpec.changedAttrs[a] === 'y2') {\r\n                                    mark.setAttribute('y2', parseFloat(mark.getAttribute('y1')));\r\n                                    statusObj['y2'] = parseFloat(mark.getAttribute('y1'));\r\n                                } else {\r\n                                    statusObj[ChartSpec.changedAttrs[a]] = parseFloat(mark.getAttribute(ChartSpec.changedAttrs[a]));\r\n                                }\r\n                            } else {\r\n                                mark.setAttribute(ChartSpec.changedAttrs[a], 0);\r\n                                statusObj[ChartSpec.changedAttrs[a]] = 0;\r\n                            }\r\n\r\n                        }\r\n                    }\r\n                    markStr = '<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"500\" height=\"500\">' + mark.outerHTML + '</svg>';\r\n                    let parser = new DOMParser();\r\n                    let svgMark = parser.parseFromString(markStr, \"image/svg+xml\").lastChild.children[0];\r\n                    ChartSpec.charts[i].querySelector('#chartContent').appendChild(svgMark);\r\n                    markStatus.get(allMarks[j])[i] = statusObj;\r\n                }\r\n\r\n            }\r\n        }\r\n\r\n        //set data-trans of chart 0\r\n        ChartSpec.dataTrans = new Map();\r\n        for (let j = 0; j < allMarks.length; j++) {\r\n            let statusArr = markStatus.get(allMarks[j]);\r\n            let dataTransArr = [];\r\n           \r\n            for (let si = 0; si < statusArr.length; si++) {\r\n                let tmpStatus = {};\r\n                for (let a = 0; a < ChartSpec.changedAttrs.length; a++) {\r\n                    tmpStatus[ChartSpec.changedAttrs[a]] = statusArr[si][ChartSpec.changedAttrs[a]];\r\n                }\r\n                dataTransArr.push(tmpStatus);//mark status in charts\r\n            }\r\n            //copy the status of the 1st chart as the init status\r\n            ChartSpec.dataTrans.set(allMarks[j], dataTransArr);\r\n            ChartSpec.charts[0].querySelector('#' + allMarks[j]).setAttribute('data-transition', JSON.stringify({ \"dataTrans\": dataTransArr }, null, '\\t'))\r\n        }\r\n\r\n        return ChartSpec.charts[0];\r\n    }\r\n\r\n    static getBBoxes() {\r\n        let svg = document.getElementById('chartContainer').children[0];\r\n        let marks = svg.querySelectorAll('[id^=\"mark\"]');\r\n        let bBoxes = new Map();\r\n        if (marks.length > 0) {\r\n            [].forEach.call(marks, (m) => {\r\n                let markId = m.getAttribute('id');\r\n                let bBox;\r\n                if (m.tagName === 'text') {\r\n                    bBox = m.getBBox();\r\n                    bBox.width += 10;\r\n                } else {\r\n                    bBox = m.getBBox();\r\n                }\r\n                bBoxes.set(markId, bBox);\r\n            })\r\n        }\r\n        return bBoxes;\r\n    }\r\n\r\n    static removeTransitions(t) {\r\n        let tr = t.getAttribute('transform');\r\n        let parentTrans = t.parentNode.getAttribute('trans').split(',');\r\n        if (tr) {\r\n            tr = tr.replace(/translate|scale|rotate|\\s/g, (m) => {\r\n                return m === ' ' ? '' : '@' + m;\r\n            });\r\n            tr = tr.replace(/(^@*)|(@*$)/g, '').split('@');\r\n            let scaleStr = '', transStr = '';\r\n            for (let i = 0; i < tr.length; i++) {\r\n                if (tr[i].indexOf('translate') >= 0) {\r\n                    transStr = tr[i];\r\n                } else if (tr[i].indexOf('scale') >= 0) {\r\n                    scaleStr = tr[i];\r\n                }\r\n            }\r\n            let transPosiStr = transStr.replace(/translate\\(| |\\)/g, '').split(',');\r\n            t.setAttribute('transform', scaleStr);\r\n            if (t.tagName === 'g') {\r\n                t.setAttribute('trans', (parseFloat(transPosiStr[0]) + parseFloat(parentTrans[0])) + ',' + (parseFloat(transPosiStr[1]) + parseFloat(parentTrans[1])));\r\n            } else {\r\n                Util.transShape(t, parseFloat(transPosiStr[0]) + parseFloat(parentTrans[0]), parseFloat(transPosiStr[1]) + parseFloat(parentTrans[1]));\r\n            }\r\n        } else {\r\n            if (t.tagName === 'g') {\r\n                t.setAttribute('trans', parentTrans.join(','));\r\n            } else {\r\n                Util.transShape(t, parseFloat(parentTrans[0]), parseFloat(parentTrans[1]));\r\n            }\r\n        }\r\n        if (t.children.length > 0) {\r\n            for (let i = 0; i < t.children.length; i++) {\r\n                ChartSpec.removeTransitions(t.children[i]);\r\n            }\r\n        }\r\n    }\r\n\r\n    static getMarkBBox(svg) {\r\n        let markBoundingRects = new Map();\r\n        let marks = svg.querySelectorAll('[id^=\"mark\"]');\r\n        if (marks.length > 0) {\r\n            [].forEach.call(marks, function (m) {\r\n                if (m.tagName !== 'text') {\r\n                    markBoundingRects.set(m.getAttribute('id'), m.getBBox());\r\n                } else {//text tag, the bounding box coords is the bottom left corner\r\n                    let bBox = m.getBBox();\r\n                    bBox.y -= bBox.height;\r\n                    bBox.width += 10;\r\n                    markBoundingRects.set(m.getAttribute('id'), bBox);\r\n                }\r\n            });\r\n        }\r\n        return markBoundingRects;\r\n    }\r\n\r\n    static processAnimateChart(chartStr, bBoxes) {\r\n        let tmpDiv = document.createElement('div');\r\n        tmpDiv.innerHTML = chartStr;\r\n        let aniSvg = tmpDiv.children[0];\r\n\r\n        aniSvg.setAttribute('id', 'visAnimation');\r\n        aniSvg.querySelector('#chartContent').setAttribute('id', 'aniChartContent');\r\n        let aniMarks = aniSvg.querySelectorAll('[id^=\"mark\"]');\r\n        if (aniMarks.length > 0) {\r\n            [].forEach.call(aniMarks, function (am) {\r\n                let markId = am.getAttribute('id');\r\n                let idIndex = markId.substring(4);\r\n                am.setAttribute('id', 'ani' + markId);\r\n\r\n                //create corresponding mask\r\n                let mask = document.createElementNS('http://www.w3.org/2000/svg', 'mask');\r\n                mask.setAttributeNS(null, 'id', 'animaskmark' + idIndex);\r\n                let rect = document.createElementNS('http://www.w3.org/2000/svg', 'rect');\r\n                rect.setAttributeNS(null, 'id', 'animaskBgmark' + idIndex);\r\n                rect.setAttributeNS(null, 'x', bBoxes.get(markId).x - 1);\r\n                rect.setAttributeNS(null, 'y', bBoxes.get(markId).y - 1);\r\n                rect.setAttributeNS(null, 'width', bBoxes.get(markId).width + 2);\r\n                rect.setAttributeNS(null, 'height', bBoxes.get(markId).height + 2);\r\n                rect.setAttributeNS(null, 'fill', '#fff');\r\n                mask.appendChild(rect);\r\n\r\n                let rect2 = document.createElementNS('http://www.w3.org/2000/svg', 'rect');\r\n                rect2.setAttributeNS(null, 'x', -10000);\r\n                rect2.setAttributeNS(null, 'y', -10000);\r\n                rect2.setAttributeNS(null, 'width', 20000);\r\n                rect2.setAttributeNS(null, 'height', 20000);\r\n                rect2.setAttributeNS(null, 'fill', '#fff');\r\n                mask.appendChild(rect2);\r\n\r\n                aniSvg.appendChild(mask);\r\n                am.setAttribute('mask', 'url(#animaskmark' + idIndex + ')');\r\n            });\r\n        }\r\n        return aniSvg;\r\n    }\r\n}\r\n\r\nChartSpec.charts = [];\r\nChartSpec.changedAttrs = [];\r\nChartSpec.dataTrans = new Map();\r\nChartSpec.markDoms = new Map();\r\n\r\nexport default ChartSpec;","class FacetSpec {\r\n    constructor(type, views) {\r\n        this._type;\r\n        this._views;\r\n        this.views = views;\r\n        this.type = type;\r\n    }\r\n\r\n    set type(type) {\r\n        if (typeof type !== 'undefined') {\r\n            if (Object.keys(FacetSpec.facetType).includes(type)) {\r\n                this._type = type;\r\n            } else {\r\n                console.log('the facet type has to be one of \"row\" or \"column\", setting to default value \"column\".')\r\n                this._type = FacetSpec.facetType.col;\r\n            }\r\n        }\r\n    }\r\n\r\n    get type() {\r\n        return this._type;\r\n    }\r\n\r\n    set views(views) {\r\n        if (typeof views !== 'undefined') {\r\n            //find the max number of charts in views\r\n            let maxLen = 0;\r\n            for (let i = 0; i < views.length; i++) {\r\n                if (views[i].length > maxLen) {\r\n                    maxLen = views[i].length;\r\n                }\r\n            }\r\n            for (let i = 0; i < views.length; i++) {\r\n                if (views[i].length < maxLen) {\r\n                    let lastItem = views[i][views[i].length - 1];\r\n                    let numDiff = maxLen - views[i].length;\r\n                    while (numDiff > 0) {\r\n                        views[i].push(lastItem);\r\n                        numDiff--;\r\n                    }\r\n                }\r\n            }\r\n            this._views = views;\r\n        }\r\n    }\r\n\r\n    get views() {\r\n        return this._views;\r\n    }\r\n}\r\n\r\nFacetSpec.facetType = {\r\n    row: 'row',\r\n    col: 'column'\r\n}\r\n\r\nexport default FacetSpec;","import TimingSpec from './TimingSpec.js';\r\n\r\nclass GroupingSpec extends TimingSpec {\r\n    constructor() {\r\n        super();\r\n        this._groupBy = 'id'; //optional\r\n        this._reference = TimingSpec.timingRef.previousStart;\r\n        this._delay = 0;\r\n        this.sort = class { //optional\r\n            constructor() {\r\n                this.field;\r\n                this.order;\r\n                this.expr;\r\n            }\r\n        }\r\n\r\n        this.grouping;//optional, another GroupingSpec object indicating more groupings\r\n    }\r\n\r\n    /***** getters and setters *****/\r\n    set groupBy(gb) {\r\n        if (typeof gb !== 'undefined')\r\n            this._groupBy = gb;\r\n    }\r\n\r\n    get groupBy() {\r\n        return this._groupBy;\r\n    }\r\n\r\n    set reference(ref) {\r\n        if (typeof ref !== 'undefined') {\r\n            let tmpRefStr = TimingSpec.transRef(ref);\r\n            if (Object.keys(TimingSpec.timingRef).includes(tmpRefStr)) {\r\n                this._reference = ref;\r\n            } else {\r\n                alert('the \\'reference\\' of TimingSpec has to be one of \\'previousStart\\', \\'previousEnd\\' or \\'absolute\\'. ')\r\n            }\r\n        }\r\n    }\r\n\r\n    get reference() {\r\n        return this._reference;\r\n    }\r\n\r\n    set delay(dly) {\r\n        if (typeof dly !== 'undefined') {\r\n            if (dly >= 1000 / TimingSpec.FRAME_RATE || dly === 0) {\r\n                this._delay = dly;\r\n            } else {\r\n                this._delay = 1000 / TimingSpec.FRAME_RATE;\r\n            }\r\n        }\r\n    }\r\n\r\n    get delay() {\r\n        return this._delay;\r\n    }\r\n    /***** end getters and setters *****/\r\n\r\n    /**\r\n     * init nested grouping and actions using json obj\r\n     * @param {JSON obj} groupingJson \r\n     */\r\n    initGrouping(groupingJson) {\r\n        this.groupBy = groupingJson.groupBy;\r\n        this.reference = groupingJson.reference;\r\n        this.delay = groupingJson.delay;\r\n\r\n        if (typeof groupingJson.sort !== 'undefined') {\r\n            this.sort.field = groupingJson.sort.field;\r\n            this.sort.order = groupingJson.sort.order;\r\n            this.sort.expr = groupingJson.sort.expr;\r\n        }\r\n\r\n        if (typeof groupingJson.grouping !== 'undefined') {\r\n            this.grouping = new GroupingSpec();\r\n            this.grouping.initGrouping(groupingJson.grouping);\r\n        } else if (typeof groupingJson.grouping === 'undefined' && groupingJson.groupBy !== 'id') {\r\n            //didnot goruping to id, add extra grouping by id\r\n            this.grouping = new GroupingSpec();\r\n            this.grouping.groupBy = 'id';\r\n        }\r\n    }\r\n\r\n    arrangeOrder(markIds, domMarks) {\r\n        let root = {};\r\n        root.groupRef = 'root';\r\n        root.children = [];\r\n        root.marks = markIds;\r\n        this.generateTree(root, domMarks);\r\n\r\n        let orderedMarks = this.getMarkOrder(root);\r\n        return orderedMarks;\r\n    }\r\n    generateTree(t, domMarks) {\r\n        let groupByRef = this.groupBy;\r\n\r\n        let nodesThisLevel = new Map();\r\n        for (let i = 0, markId; i < t.marks.length | (markId = t.marks[i]); i++) {\r\n            let datum = domMarks.get(markId)['data-datum'];//datum stored in the tag\r\n            let refValue;\r\n            if (typeof domMarks.get(markId)[groupByRef] !== 'undefined') {\r\n                refValue = domMarks.get(markId)[groupByRef];\r\n            } else if (typeof domMarks.get(markId)[groupByRef] === 'undefined' && typeof datum[groupByRef] !== 'undefined') {\r\n                refValue = datum[groupByRef];\r\n            } else {\r\n                console.log('error: grouping by an unknown attribute');\r\n                return;\r\n            }\r\n\r\n            if (typeof nodesThisLevel.get(refValue) !== 'undefined') {\r\n                nodesThisLevel.get(refValue).marks.push(markId);\r\n            } else {\r\n                let tmpObj = {};\r\n                tmpObj.groupRef = groupByRef;\r\n                tmpObj.refValue = refValue;\r\n                tmpObj.children = [];\r\n                tmpObj.marks = [markId];\r\n                nodesThisLevel.set(refValue, tmpObj);\r\n            }\r\n        }\r\n\r\n        //order nodes of this level according to the 'sort' spec\r\n        switch (typeof this.sort.order) {\r\n            case 'object'://Array\r\n                for (let i = 0, refValue; i < this.sort.order.length | (refValue = this.sort.order[i]); i++) {\r\n                    if (typeof nodesThisLevel.get(refValue) !== 'undefined') {\r\n                        t.children.push(nodesThisLevel.get(refValue));\r\n                    }\r\n                }\r\n                break;\r\n            case 'string'://'ascending' | 'descending'\r\n                //check whether have come to the lowest level\r\n                let hasSingleMark = true;\r\n                nodesThisLevel.forEach(function (value, ref) {\r\n                    if (value.marks.length > 1) {\r\n                        hasSingleMark = false;\r\n                    }\r\n                })\r\n\r\n                //only take effect when a specific field is specified and are on the lowest level\r\n                if (typeof this.sort.field !== 'undefined' && hasSingleMark) {\r\n                    let orderRef = this.sort.field;\r\n                    let nodesThisLevelArr = [...nodesThisLevel];\r\n                    let orderType = this.sort.order;\r\n                    nodesThisLevelArr.sort(function (a, b) {\r\n                        let markId1 = a[1].marks[0];\r\n                        let markId2 = b[1].marks[0];\r\n                        let orderRefValue1 = '', orderRefValue2 = '';\r\n                        let datum1 = domMarks.get(markId1)['data-datum'];\r\n                        let datum2 = domMarks.get(markId2)['data-datum'];\r\n                        if (typeof domMarks.get(markId1)[orderRef] !== 'undefined' && domMarks.get(markId2)[orderRef] !== 'undefined') {\r\n                            orderRefValue1 = domMarks.get(markId1)[orderRef];\r\n                            orderRefValue2 = domMarks.get(markId2)[orderRef];\r\n                        } else if (typeof domMarks.get(markId1)[orderRef] === 'undefined'\r\n                            && typeof datum1[orderRef] !== 'undefined'\r\n                            && typeof domMarks.get(markId2)[orderRef] === 'undefined'\r\n                            && typeof datum2[orderRef] !== 'undefined') {\r\n                            orderRefValue1 = datum1[orderRef];\r\n                            orderRefValue2 = datum2[orderRef];\r\n                        }\r\n\r\n                        if (!isNaN(parseFloat(orderRefValue1))) {\r\n                            orderRefValue1 = parseFloat(orderRefValue1);\r\n                        }\r\n                        if (!isNaN(parseFloat(orderRefValue2))) {\r\n                            orderRefValue2 = parseFloat(orderRefValue2);\r\n                        }\r\n\r\n                        if (orderType === GroupingSpec.orderTypes.ascending) {\r\n                            if (orderRefValue1 >= orderRefValue2) {\r\n                                return 1;\r\n                            } else {\r\n                                return -1;\r\n                            }\r\n                        } else if (orderType === GroupingSpec.orderTypes.descending) {\r\n                            if (orderRefValue2 >= orderRefValue1) {\r\n                                return 1;\r\n                            } else {\r\n                                return -1;\r\n                            }\r\n                        } else if (orderType === GroupingSpec.orderTypes.random) {\r\n                            return Math.random() >= 0.5 ? 1 : -1;\r\n                        }\r\n\r\n                    })\r\n                    for (let i = 0, tmpNode; i < nodesThisLevelArr.length | (tmpNode = nodesThisLevelArr[i]); i++) {\r\n                        t.children.push(tmpNode[1]);\r\n                    }\r\n                } else {\r\n                    let nodesThisLevelArr = [...nodesThisLevel];\r\n                    if (this.sort.order === GroupingSpec.orderTypes.ascending) {\r\n                        nodesThisLevelArr.sort(function (a, b) {\r\n                            if (a[0] >= b[0]) {\r\n                                return 1;\r\n                            } else {\r\n                                return -1;\r\n                            }\r\n                        })\r\n                    } else if (this.sort.order === GroupingSpec.orderTypes.descending) {\r\n                        nodesThisLevelArr.sort(function (a, b) {\r\n                            if (b[0] >= a[0]) {\r\n                                return 1;\r\n                            } else {\r\n                                return -1;\r\n                            }\r\n                        })\r\n                    } else if (this.sort.order === GroupingSpec.orderTypes.random) {\r\n                        nodesThisLevelArr.sort(function (a, b) {\r\n                            return Math.random() >= 0.5 ? 1 : -1;\r\n                        })\r\n                    }\r\n                    for (let i = 0, tmpNode; i < nodesThisLevelArr.length | (tmpNode = nodesThisLevelArr[i]); i++) {\r\n                        t.children.push(tmpNode[1]);\r\n                    }\r\n                }\r\n\r\n                break;\r\n            default:\r\n                nodesThisLevel.forEach(function (tmpNode, ref) {\r\n                    t.children.push(tmpNode);\r\n                })\r\n        }\r\n\r\n        if (typeof this.grouping !== 'undefined') {\r\n            for (let i = 0, tmpNode; i < t.children.length | (tmpNode = t.children[i]); i++) {\r\n                this.grouping.generateTree(tmpNode, domMarks);\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * get the animation order of marks\r\n     * @param {Object} t\r\n     * @param {Array} arr \r\n     */\r\n    getMarkOrder(t) {\r\n        let orderedMarks = [];\r\n        if (t != null) {\r\n            let queue = [];\r\n            queue.unshift(t);\r\n            while (queue.length != 0) {\r\n                let item = queue.shift();\r\n                let children = item.children;\r\n                if (children.length <= 0) {\r\n                    orderedMarks = [...orderedMarks, ...item.marks];\r\n                } else {\r\n                    for (let i = 0; i < children.length; i++)\r\n                        queue.push(children[i]);\r\n                }\r\n\r\n            }\r\n        }\r\n        return orderedMarks;\r\n    }\r\n\r\n    /**\r\n     * from bottom up, calculate the time specs of marks recursively\r\n     * @param {GroupingSpec} groupingSpec \r\n     * @param {Map} markAni : key:markId, value:time & action specs of the corresponding mark\r\n     * @param {Map} groupByM : key:markId, value:group reference\r\n     */\r\n    calTimeInGrouping(markAni, domMarks) {\r\n        let groupByRef = this.groupBy;\r\n\r\n        let groupByMap = new Map();//record the result of groupBy in this level. key:markId, value:group reference\r\n        markAni.forEach(function (ani, markId) {\r\n            let datum = domMarks.get(markId)['data-datum'];//datum stored in the tag\r\n            if (typeof domMarks.get(markId)[groupByRef] !== 'undefined') {\r\n                groupByMap.set(markId, domMarks.get(markId)[groupByRef]);\r\n            } else if (typeof domMarks.get(markId)[groupByRef] === 'undefined' && typeof datum[groupByRef] !== 'undefined') {\r\n                groupByMap.set(markId, datum[groupByRef]);\r\n            } else {\r\n                console.log('error: grouping by an unknown attribute');\r\n            }\r\n        })\r\n        if (typeof this.grouping !== 'undefined') {\r\n            this.grouping.calTimeInGrouping(markAni, domMarks);\r\n\r\n            //update time with upper grouping specs\r\n            let groupByArr = [...groupByMap];\r\n            let currentGroupRef = '';\r\n            let firstItemLastGroup, lastItemLastGroup;\r\n            let currentGroup = new Array();//record marks belong to current group\r\n            let lastGroup = new Map();\r\n            for (let i = 0; i < groupByArr.length; i++) {\r\n                let markId = groupByArr[i][0];\r\n                let groupRef = groupByArr[i][1];\r\n                if (groupRef !== currentGroupRef) {//come to the end of one group\r\n                    this.updateGroupingTime(firstItemLastGroup, lastItemLastGroup, lastGroup, currentGroup, markAni);\r\n                    firstItemLastGroup = currentGroup[0];\r\n                    lastItemLastGroup = currentGroup[currentGroup.length - 1];\r\n                    lastGroup = currentGroup;\r\n                    currentGroup = [];\r\n                    currentGroupRef = groupRef;\r\n                }\r\n                currentGroup.push(markId);\r\n            }\r\n\r\n            //deal with the last group\r\n            this.updateGroupingTime(firstItemLastGroup, lastItemLastGroup, lastGroup, currentGroup, markAni);\r\n        } else {//has come to the lowest level\r\n            let markAniArr = [...markAni.entries()];\r\n            markAniArr[0][1].startTime = 0;\r\n            for (let i = 1; i < markAniArr.length; i++) {\r\n                let tmpStart,\r\n                    previousStartTime = markAniArr[i - 1][1].startTime,\r\n                    previousEndTime = previousStartTime + markAniArr[i - 1][1].totalDuration;\r\n                switch (this.reference) {\r\n                    case TimingSpec.timingRef.previousStart:\r\n                        tmpStart = previousStartTime + this.delay;\r\n                        break;\r\n                    case TimingSpec.timingRef.previousEnd:\r\n                        tmpStart = previousEndTime + this.delay;\r\n                        break;\r\n                    case TimingSpec.timingRef.absolute:\r\n                        tmpStart = this.delay;\r\n                        break;\r\n                    default:\r\n                        tmpStart = previousStartTime + this.delay;\r\n                }\r\n                markAniArr[i][1].startTime = tmpStart;\r\n                markAni.set(markAniArr[i][0], markAniArr[i][1]);\r\n            }\r\n        }\r\n    }\r\n\r\n    updateGroupingTime(firstItemLastGroup, lastItemLastGroup, lastGroup, currentGroup, markAni) {\r\n        let maxDuration = -10000, maxDurationItemLastGroup;\r\n        for (let i = 0, itemLastGroup; i < lastGroup.length | (itemLastGroup = lastGroup[i]); i++) {\r\n            if (markAni.get(itemLastGroup).startTime + markAni.get(itemLastGroup).totalDuration > maxDuration) {\r\n                maxDuration = markAni.get(itemLastGroup).startTime + markAni.get(itemLastGroup).totalDuration;\r\n                maxDurationItemLastGroup = itemLastGroup;\r\n            }\r\n        }\r\n\r\n\r\n        //update time acording to delay from the second group\r\n        if (typeof firstItemLastGroup !== 'undefined' && typeof maxDurationItemLastGroup !== 'undefined') {\r\n            let timeDiff = 0;\r\n            switch (this.reference) {\r\n                case TimingSpec.timingRef.previousStart:\r\n                    timeDiff = markAni.get(firstItemLastGroup).startTime - markAni.get(currentGroup[0]).startTime + this.delay;\r\n                    break;\r\n                case TimingSpec.timingRef.previousEnd:\r\n                    timeDiff = markAni.get(maxDurationItemLastGroup).startTime + markAni.get(maxDurationItemLastGroup).totalDuration - markAni.get(currentGroup[0]).startTime + this.delay;\r\n                    break;\r\n                case TimingSpec.timingRef.absolute:\r\n                    timeDiff = this.delay - markAni.get(currentGroup[0]).startTime;\r\n                    break;\r\n            }\r\n            for (let i = 0, markId; i < currentGroup.length | (markId = currentGroup[i]); i++) {\r\n                markAni.get(markId).startTime += timeDiff;\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nGroupingSpec.orderTypes = {\r\n    ascending: 'ascending',\r\n    descending: 'descending',\r\n    random: 'random'\r\n}\r\n\r\nexport default GroupingSpec;","import TimingSpec from './TimingSpec.js';\r\nimport Animation from './Animation.js';\r\nimport Util from './util/Util.js';\r\n\r\nclass Renderer {\r\n    constructor() { }\r\n\r\n    /**\r\n     * get the corresponding frame of current time from Animation.frames\r\n     * and update the dom attrs according to the recorded attrs status in that frame\r\n     * @param {number} : time in ms\r\n     */\r\n    static renderFrame(ctime) {\r\n        let frame = Animation.renderFrame(ctime);\r\n        if (typeof frame === 'undefined') {\r\n            return false;\r\n        }\r\n        for (let i = 0, markStatus; i < frame.length | (markStatus = frame[i]); i++) {\r\n            markStatus[1].forEach(function (singleStatus, attrName) {\r\n                let aniId = '';\r\n                if (singleStatus.type === 'mark') {\r\n                    aniId = 'ani' + markStatus[0];\r\n                    switch (singleStatus.attrName) {\r\n                        case 'textContent':\r\n                            if (Util.checkHTML(singleStatus.value)) {\r\n                                let tmpDom = Util.strToDomNode(singleStatus.value);\r\n                                document.getElementById(aniId).appendChild(tmpDom);\r\n                            } else {\r\n                                document.getElementById(aniId).innerHTML = singleStatus.value;\r\n                                document.getElementById(aniId).textContent = singleStatus.value;\r\n                            }\r\n                            break;\r\n                        case 'stroke-dashoffset':\r\n                            document.getElementById(aniId).setAttributeNS(null, 'stroke-dasharray', document.getElementById(aniId).getTotalLength());\r\n                            document.getElementById(aniId).setAttributeNS(null, singleStatus.attrName, singleStatus.value);\r\n                            break;\r\n                        case 'x':\r\n                        case 'y':\r\n                            document.getElementById(aniId).setAttributeNS(null, singleStatus.attrName, singleStatus.value);\r\n                            if (document.getElementById('animaskCover' + markStatus[0])) {\r\n                                if (singleStatus.attrName === 'y' && document.getElementById(markStatus[0]).tagName === 'text') {\r\n                                    document.getElementById('animaskCover' + markStatus[0]).setAttributeNS(null, singleStatus.attrName, singleStatus.value - parseFloat(document.getElementById('animaskBg' + markStatus[0]).getAttributeNS(null, 'height')));\r\n                                } else {\r\n                                    document.getElementById('animaskCover' + markStatus[0]).setAttributeNS(null, singleStatus.attrName, singleStatus.value);\r\n                                }\r\n                            }\r\n                            document.getElementById(aniId).setAttributeNS(null, singleStatus.attrName, singleStatus.value);\r\n                            break;\r\n                        default:\r\n                            document.getElementById(aniId).setAttributeNS(null, singleStatus.attrName, singleStatus.value);\r\n                    }\r\n                    //change animaskBgmark with the mark\r\n                    let aniMarkBgId = 'animaskBg' + markStatus[0],\r\n                        currentAniMarkBBox = document.getElementById(aniId).getBBox();\r\n                    document.getElementById(aniMarkBgId).setAttributeNS(null, 'x', currentAniMarkBBox.x - 1);\r\n                    document.getElementById(aniMarkBgId).setAttributeNS(null, 'y', currentAniMarkBBox.y - 1);\r\n                    document.getElementById(aniMarkBgId).setAttributeNS(null, 'width', currentAniMarkBBox.width + 2);\r\n                    document.getElementById(aniMarkBgId).setAttributeNS(null, 'height', currentAniMarkBBox.height + 2);\r\n                } else if (singleStatus.type === 'mask') {\r\n                    aniId = 'animask' + markStatus[0];\r\n                    /*\r\n                     *1st. check whether the mask is added \r\n                     *2nd. check whether the mask is the right shape\r\n                     *3rd. set the attributes of the mask\r\n                     */\r\n                    let testAniMCover = document.querySelectorAll('#' + aniId + ' [id^=\"animaskCover\"]');\r\n                    switch (singleStatus.animationType) {\r\n                        case 'fade':\r\n                        case 'move':\r\n                        case 'wipe':\r\n                        case 'custom':\r\n                            if (testAniMCover.length > 0) {//already has a mask cover\r\n                                let aniMCover = document.getElementById('animaskCover' + markStatus[0]);\r\n                                if (aniMCover.getAttribute('maskType') !== 'rect') {//current cover is not the right shape\r\n                                    aniMCover.parentNode.removeChild(aniMCover);\r\n                                    let rect = Renderer.generateMaskCover(Renderer.coverTypes.rect, markStatus[0], singleStatus.attrName, singleStatus.value);\r\n                                    document.getElementById(aniId).appendChild(rect);\r\n                                } else {\r\n                                    document.getElementById('animaskCover' + markStatus[0]).setAttributeNS(null, singleStatus.attrName, singleStatus.value);\r\n                                }\r\n                            } else {//don't have a mask cover yet\r\n                                let rect = Renderer.generateMaskCover(Renderer.coverTypes.rect, markStatus[0], singleStatus.attrName, singleStatus.value);\r\n                                document.getElementById(aniId).appendChild(rect);\r\n                            }\r\n                            break;\r\n                        case 'circle':\r\n                        case 'wheel':\r\n                            let d = Util.arc(singleStatus.value.cx, singleStatus.value.cy, singleStatus.value.innerRadius, singleStatus.value.outterRadius - 6, singleStatus.value.startAngle, singleStatus.value.endAngle);\r\n                            if (testAniMCover.length > 0) {//already has a mask cover\r\n                                let aniMCover = document.getElementById('animaskCover' + markStatus[0]);\r\n                                if (aniMCover.getAttribute('maskType') !== 'wedge') {//current cover is not the right shape\r\n                                    aniMCover.parentNode.removeChild(aniMCover);\r\n                                    let wedge = Renderer.generateMaskCover(Renderer.coverTypes.path, markStatus[0], 'd', d);\r\n                                    document.getElementById(aniId).appendChild(wedge);\r\n                                } else {\r\n                                    document.getElementById('animaskCover' + markStatus[0]).setAttributeNS(null, 'd', d);\r\n                                }\r\n                            } else {//don't have a mask cover yet\r\n                                let wedge = Renderer.generateMaskCover(Renderer.coverTypes.path, markStatus[0], 'd', d);\r\n                                document.getElementById(aniId).appendChild(wedge);\r\n                            }\r\n                            break;\r\n                        case 'mistake':\r\n                            if (testAniMCover.length > 0) {//already has a mask cover\r\n                                document.getElementById('animaskCover' + markStatus[0]).setAttributeNS(null, singleStatus.attrName, singleStatus.value);\r\n                            }\r\n                            break;\r\n                    }\r\n                } else {\r\n                    console.log('this status has no type');\r\n                }\r\n            })\r\n        }\r\n        return true;\r\n    }\r\n\r\n    static generateMaskCover(coverType, markId, updateAttrName, updateAttrValue) {\r\n        let maskCover;\r\n        switch (coverType) {\r\n            case Renderer.coverTypes.rect:\r\n                maskCover = document.createElementNS('http://www.w3.org/2000/svg', 'rect');\r\n                maskCover.setAttributeNS(null, 'maskType', 'rect');\r\n                maskCover.setAttributeNS(null, 'x', document.getElementById('animaskBg' + markId).getAttribute('x'));\r\n                maskCover.setAttributeNS(null, 'y', document.getElementById('animaskBg' + markId).getAttribute('y'));\r\n                maskCover.setAttributeNS(null, 'width', document.getElementById('animaskBg' + markId).getAttribute('width'));\r\n                maskCover.setAttributeNS(null, 'height', document.getElementById('animaskBg' + markId).getAttribute('height'));\r\n                break;\r\n            case Renderer.coverTypes.path:\r\n                maskCover = document.createElementNS('http://www.w3.org/2000/svg', 'path');\r\n                maskCover.setAttributeNS(null, 'maskType', 'wedge');\r\n                if (document.getElementById(markId).getAttribute('transform')) {\r\n                    maskCover.setAttributeNS(null, 'tranform', document.getElementById(markId).getAttribute('transform'));\r\n                }\r\n                break;\r\n        }\r\n        maskCover.setAttributeNS(null, 'id', 'animaskCover' + markId);\r\n        maskCover.setAttributeNS(null, 'fill', '#000');\r\n        maskCover.setAttributeNS(null, 'stroke', '#000');\r\n        maskCover.setAttributeNS(null, 'stroke-width', 4);\r\n        if (updateAttrName !== 'stroke')\r\n            maskCover.setAttributeNS(null, updateAttrName, updateAttrValue);\r\n        return maskCover;\r\n    }\r\n\r\n    static resetCover() {\r\n        let animaskCovers = document.querySelectorAll('[id^=\"animaskCover\"]');\r\n        if (animaskCovers.length > 0) {\r\n            [].forEach.call(animaskCovers, (mc) => {\r\n                mc.parentNode.removeChild(mc);\r\n            })\r\n        }\r\n    }\r\n\r\n    static play() {\r\n        let time = 0;\r\n        let animationInterval = setInterval(() => {\r\n            //render this frame\r\n            time = parseInt(time / (1000 / TimingSpec.FRAME_RATE)) * (1000 / TimingSpec.FRAME_RATE);\r\n            let locatedFrame = this.renderFrame(time);\r\n\r\n            time += 1000 / TimingSpec.FRAME_RATE;\r\n            if (time > Animation.wholeEndTime || !locatedFrame) {\r\n                clearInterval(animationInterval);\r\n                animationInterval = 'undefined';\r\n                time = 0;\r\n            }\r\n        }, 1000 / TimingSpec.FRAME_RATE);\r\n    }\r\n}\r\n\r\nRenderer.coverTypes = {\r\n    rect: Symbol(),\r\n    path: Symbol()\r\n};\r\n\r\nexport default Renderer;","class TimingSpec {\r\n    constructor() {\r\n        this._offset = 0;//default offfset is 0\r\n        this._reference = TimingSpec.timingRef.previousStart;//default offset reference is 'previous_start'\r\n    }\r\n\r\n    /***** getters and setters *****/\r\n    set reference(offsetRef) {\r\n        if (typeof offsetRef !== 'undefined') {\r\n            let tmpOffsetRefStr = TimingSpec.transRef(offsetRef);\r\n            if (Object.keys(TimingSpec.timingRef).includes(tmpOffsetRefStr)) {\r\n                this._reference = offsetRef;\r\n            } else {\r\n                alert('the \\'reference\\' of TimingSpec has to be one of \\'previousStart\\', \\'previousEnd\\' or \\'absolute\\'. ')\r\n            }\r\n        }\r\n    }\r\n\r\n    get reference() {\r\n        return this._reference;\r\n    }\r\n\r\n    set offset(ofst) {\r\n        if (typeof ofst !== 'undefined') {\r\n            if (typeof ofst === 'number') {\r\n                this._offset = Math.floor(ofst / (1000 / TimingSpec.FRAME_RATE)) * (1000 / TimingSpec.FRAME_RATE);\r\n            } else if (typeof ofst === 'object') {\r\n                this._offset = ofst;\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    get offset() {\r\n        return this._offset;\r\n    }\r\n    /***** end getters and setters *****/\r\n\r\n    /**\r\n     * add offset start time\r\n     * @param {number} lastStart : start time of the last item\r\n     * @param {number} lastEnd : end time of the last item\r\n     * @param {number} allItemsStart : start time of all the items \r\n     * @param {Map} domMarks : key: markId, value: attrs\r\n     */\r\n    calOffsetTime(lastStart, lastEnd, allItemsStart = 0, domMarks = new Map()) {\r\n        if (domMarks.size === 0) {//computing action offset time, return a number\r\n            let itemStart = 0;\r\n            switch (this.reference) {\r\n                case TimingSpec.timingRef.previousStart:\r\n                    itemStart = lastStart + this.offset - allItemsStart;\r\n                    break;\r\n                case TimingSpec.timingRef.previousEnd:\r\n                    itemStart = lastEnd + this.offset - allItemsStart;\r\n                    break;\r\n                case TimingSpec.timingRef.absolute:\r\n                    itemStart = this.offset + allItemsStart;\r\n                    break;\r\n                default:\r\n                    itemStart = lastStart + this.offset - allItemsStart;\r\n            }\r\n            return itemStart;\r\n        } else {//computing animation offset time, return a map\r\n            let that = this;\r\n            let itemsStart = new Map();\r\n\r\n            //if the offset is an object, find the min value of the field in offset\r\n            let minAttrValue = 1000000;\r\n            if (typeof this.offset === 'object') {\r\n                domMarks.forEach(function (attrs, markId) {\r\n                    if (minAttrValue > parseFloat(attrs['data-datum'][that.offset.field])) {\r\n                        minAttrValue = parseFloat(attrs['data-datum'][that.offset.field]);\r\n                    }\r\n                })\r\n            }\r\n\r\n            domMarks.forEach(function (attrs, markId) {\r\n                let offsetValue = 0;\r\n                //judge the type of offset: number or object\r\n                if (typeof that.offset === 'number') {\r\n                    offsetValue = that.offset;\r\n                } else if (typeof that.offset === 'object') {\r\n                    offsetValue = that.offset.minOffset * parseFloat(attrs['data-datum'][that.offset.field]) / minAttrValue;\r\n                } else {\r\n                    offsetValue = 0;\r\n                }\r\n\r\n                switch (that.reference) {\r\n                    case TimingSpec.timingRef.previousStart:\r\n                        itemsStart.set(markId, lastStart + offsetValue - allItemsStart);\r\n                        break;\r\n                    case TimingSpec.timingRef.previousEnd:\r\n                        itemsStart.set(markId, lastEnd + offsetValue - allItemsStart);\r\n                        break;\r\n                    case TimingSpec.timingRef.absolute:\r\n                        itemsStart.set(markId, offsetValue + allItemsStart);\r\n                        break;\r\n                    default:\r\n                        itemsStart.set(markId, lastStart + offsetValue - allItemsStart);\r\n                }\r\n            })\r\n            return itemsStart;\r\n        }\r\n\r\n    }\r\n\r\n    static transRef(refStr){\r\n        switch (refStr){\r\n            case this.timingRef.previousStart:\r\n                return 'previousStart';\r\n            case this.timingRef.previousEnd:\r\n                return 'previousEnd';\r\n            case this.timingRef.absolute:\r\n                return 'absolute';\r\n        }\r\n    }\r\n}\r\n\r\nTimingSpec.FRAME_RATE = 20;\r\nTimingSpec.timingRef = {\r\n    previousStart: 'start with previous',\r\n    previousEnd: 'start after previous',\r\n    absolute: 'absolute'\r\n};\r\n\r\nexport default TimingSpec;","let TimingSpec = require('./TimingSpec.js');\r\nlet Animation = require('./Animation.js');\r\nlet AniChart = require('./AniChart.js');\r\nlet Renderer = require('./Renderer.js');\r\n\r\nwindow.aniChart = {\r\n    frameRate: TimingSpec.FRAME_RATE,\r\n    duration: () => {\r\n        return Animation.wholeEndTime;\r\n    },\r\n    loadSpec: (url, callback) => {\r\n        AniChart.loadSpec(url, callback);\r\n    },\r\n    renderSpec: (spec) => {\r\n        let aniChartObj = new AniChart();\r\n        aniChartObj.init(spec);\r\n        aniChartObj.render();\r\n    },\r\n    play: () => {\r\n        Renderer.play();\r\n    },\r\n    renderFrame: (time) => {//render frame of a specific timepoint\r\n        return Renderer.renderFrame(time);\r\n    },\r\n    reset: function () {\r\n        Renderer.resetCover();\r\n        Animation.resetAll();\r\n    },\r\n    test: function(spec) {\r\n        console.log('this is a test! ', spec);\r\n    }\r\n}","class Util {\r\n    constructor() { }\r\n\r\n    static deepClone(obj) {\r\n        if (!obj || true == obj) //this also handles boolean as true and false\r\n            return obj;\r\n        var objType = typeof (obj);\r\n        if (\"number\" == objType || \"string\" == objType) // add your immutables here\r\n            return obj;\r\n        var result = Array.isArray(obj) ? [] : {};\r\n        if (obj instanceof Map) {\r\n            result = new Map();\r\n            for (let i = 0; i < obj.keys().length; i++) {\r\n                let key = obj.keys()[i];\r\n                result.set(key, Util.deepClone(obj.get(key)));\r\n            }\r\n        }\r\n        for (var key in obj)\r\n            if (obj.hasOwnProperty(key))\r\n                result[key] = Util.deepClone(obj[key]);\r\n        return result;\r\n    }\r\n\r\n    static formatTime(time) {\r\n        let currentTimeS = parseInt(time / 1000);\r\n        let currentTimeMS = parseInt(time % 1000 / 10);\r\n        let currentTimeSStr = currentTimeS < 10 ? '0' + currentTimeS : '' + currentTimeS;\r\n        let currentTimeMSStr = currentTimeMS < 10 ? '0' + currentTimeMS : '' + currentTimeMS;\r\n        return currentTimeSStr + ':' + currentTimeMSStr;\r\n    }\r\n\r\n    static color2RGB(color) {\r\n        color = color.toLowerCase();\r\n        if (Array.from(this.colorNames.keys()).includes(color)) {\r\n            color = this.colorNames.get(color);\r\n        }\r\n        color = color.replace(/\\s/g, '');\r\n        if (color.indexOf('rgb') >= 0) {\r\n            let tmpStr = color.substr(color.indexOf('(') + 1);\r\n            tmpStr = tmpStr.substring(0, tmpStr.indexOf(')'));\r\n            let rgb = tmpStr.split(',');\r\n            if (rgb.length === 3) {\r\n                rgb[3] = 255;\r\n            }\r\n            return [parseInt(rgb[0]), parseInt(rgb[1]), parseInt(rgb[2]), parseInt(rgb[3])];\r\n        } else if (color.indexOf('#') >= 0) {\r\n            return this.HEX2RGB(color);\r\n        }\r\n        return [255, 255, 255, 0];\r\n    }\r\n\r\n    static HEX2RGB(hex) {\r\n        if (hex.charAt(0) === '#') {\r\n            hex = hex.substr(1);\r\n        }\r\n        if ((hex.length < 2) || (hex.length > 6)) {\r\n            return false;\r\n        }\r\n        let values = hex.split(''),\r\n            r,\r\n            g,\r\n            b,\r\n            a = 255;\r\n\r\n        if (hex.length === 2) {\r\n            r = parseInt(values[0].toString() + values[1].toString(), 16);\r\n            g = r;\r\n            b = r;\r\n        } else if (hex.length === 3) {\r\n            r = parseInt(values[0].toString() + values[0].toString(), 16);\r\n            g = parseInt(values[1].toString() + values[1].toString(), 16);\r\n            b = parseInt(values[2].toString() + values[2].toString(), 16);\r\n        } else if (hex.length === 6) {\r\n            r = parseInt(values[0].toString() + values[1].toString(), 16);\r\n            g = parseInt(values[2].toString() + values[3].toString(), 16);\r\n            b = parseInt(values[4].toString() + values[5].toString(), 16);\r\n        } else {\r\n            return false;\r\n        }\r\n        return [r, g, b, a];\r\n    }\r\n\r\n    static toJSON(node) {\r\n        node = node || this;\r\n        let obj = {\r\n            nodeType: node.nodeType\r\n        };\r\n        if (node.tagName) {\r\n            obj.tagName = node.tagName.toLowerCase();\r\n        } else\r\n            if (node.nodeName) {\r\n                obj.nodeName = node.nodeName;\r\n            }\r\n        if (node.nodeValue) {\r\n            obj.nodeValue = node.nodeValue;\r\n        }\r\n        let attrs = node.attributes;\r\n        if (attrs) {\r\n            obj.attr = {};\r\n            for (let i = 0, attr; i < attrs.length | (attr = attrs[i]); i++) {\r\n                obj.attr[attr.nodeName] = attr.nodeValue;\r\n            }\r\n        }\r\n\r\n        return obj;\r\n    }\r\n\r\n    static toDOM(obj) {\r\n        if (typeof obj == 'string') {\r\n            obj = JSON.parse(obj);\r\n        }\r\n        let node, nodeType = obj.nodeType;\r\n        switch (nodeType) {\r\n            case 1: //ELEMENT_NODE\r\n                node = document.createElementNS('http://www.w3.org/2000/svg', obj.tagName);\r\n                let attributes = obj.attr || {};\r\n                for (let i = 0, attr; i < Object.keys(attributes).length | (attr = Object.keys(attributes)[i]); i++) {\r\n                    let attrValue = typeof attributes[attr] === 'object' ? JSON.stringify(attributes[attr], null, 0) : attributes[attr];\r\n                    node.setAttributeNS(null, attr, attrValue);\r\n                }\r\n                break;\r\n            case 3: //TEXT_NODE\r\n                node = document.createTextNode(obj.nodeValue);\r\n                break;\r\n            case 8: //COMMENT_NODE\r\n                node = document.createComment(obj.nodeValue);\r\n                break;\r\n            case 9: //DOCUMENT_NODE\r\n                node = document.implementation.createDocument();\r\n                break;\r\n            case 10: //DOCUMENT_TYPE_NODE\r\n                node = document.implementation.createDocumentType(obj.nodeName);\r\n                break;\r\n            case 11: //DOCUMENT_FRAGMENT_NODE\r\n                node = document.createDocumentFragment();\r\n                break;\r\n            default:\r\n                return node;\r\n        }\r\n\r\n        return node;\r\n    }\r\n\r\n    /**\r\n     * @param {*} obj A parsed svg json object.\r\n     */\r\n    static discretizePath(obj) {\r\n        // normalize attributes\r\n        if (obj.tagName !== 'path') return null\r\n        let attr = obj.attr || {}\r\n        if (!attr.d) return null\r\n        return Util.discretizeD(attr.d, attr.fill);\r\n    }\r\n\r\n    static discretizeD(d, fillColor) {\r\n        let resultGroup = [],\r\n            reg = /[MmLlHhVvZzCcSsQqTtAa][^MmLlHhVvZzCcSsQqTtAa]*/gi,\r\n            group = undefined;\r\n        while ((group = reg.exec(d))) {\r\n            let offset = resultGroup.reduce((p, c) => p + c.length, 0);\r\n            resultGroup.push(d.slice(offset, group.index));\r\n            resultGroup.push(group[0]);\r\n        }\r\n        let result = resultGroup\r\n            .map(x => {\r\n                let command = x.slice(0, 1);\r\n                let parameters = x\r\n                    .slice(1)\r\n                    .split(/[ ,]/)\r\n                    .filter(n => n.trim())\r\n                    .map(n => parseFloat(n));\r\n                return command ? {\r\n                    command,\r\n                    parameters\r\n                } : null;\r\n            }).filter(x => x)\r\n        // polyline style path\r\n        if (result.every(x => 'MmLlHhVv'.includes(x.command)) && !Util.convertColor(fillColor)) {\r\n            let lines = []\r\n            let prev = null\r\n            let valid = true\r\n            result.forEach(x => {\r\n                if (!valid) return\r\n                if (x.command === 'M') {\r\n                    prev = x.parameters.slice(-2)\r\n                    return\r\n                }\r\n                if (!prev) return valid = false\r\n                if (x.command === 'm') {\r\n                    prev = prev.map((v, i) => v + x.parameters[i])\r\n                    return\r\n                }\r\n                let firstPoint = prev,\r\n                    secondPoint = x.command === x.command.toLowerCase() ? prev.slice() : [0, 0]\r\n                switch (x.command.toLowerCase()) {\r\n                    case 'l':\r\n                        secondPoint = secondPoint.map((v, i) => v + x.parameters[i])\r\n                        break\r\n                    case 'h':\r\n                        secondPoint[0] += x.parameters[0]\r\n                        secondPoint[1] = firstPoint[1]\r\n                        break\r\n                    case 'v':\r\n                        secondPoint[1] += x.parameters[0]\r\n                        secondPoint[0] = firstPoint[0]\r\n                        break\r\n                }\r\n                if (secondPoint) {\r\n                    lines.push([firstPoint, secondPoint])\r\n                    prev = secondPoint\r\n                } else {\r\n                    valid = false\r\n                }\r\n            })\r\n            if (valid) return {\r\n                type: 'lines',\r\n                data: lines\r\n            }\r\n        }\r\n        // pie style path\r\n        if (result.every(x => 'MmLlAaZz'.includes(x.command)) && result.filter(x => x.command.toLowerCase() === 'a').length) {\r\n            let circles = []\r\n            let prev = null\r\n            let valid = true\r\n            result.forEach(x => {\r\n                if (!valid) return\r\n                if (x.command.toLowerCase() === 'm') {\r\n                    prev = x.parameters.slice(-2)\r\n                    return\r\n                }\r\n                if (!prev) return valid = false\r\n                if (x.command.toLowerCase() === 'z') return\r\n                let firstPoint = prev,\r\n                    secondPoint = x.command.toLowerCase() === x.command ? prev.slice() : [0, 0]\r\n                if (x.command.toLowerCase() !== 'a') {\r\n                    return prev = secondPoint.map((v, i) => v + x.parameters[i])\r\n                }\r\n                secondPoint = secondPoint.map((v, i) => v + x.parameters[i + 5])\r\n                circles.push({\r\n                    ...Util.svgArcToCenterParam.apply(null, firstPoint.concat(x.parameters.slice(0, 5)).concat(secondPoint)),\r\n                    rx: x.parameters[0],\r\n                    ry: x.parameters[1],\r\n                    rotate: x.parameters[2]\r\n                })\r\n                prev = secondPoint\r\n            })\r\n            if (circles.length <= 0 || !circles.every(x => ['cx', 'cy'].reduce((p, c) => p + Math.abs(x[c] - circles[0][c]), 0) < 1e-1)) valid = false\r\n            if (valid) {\r\n                let c = circles.reduce((p, c) => {\r\n                    if (!p) return c\r\n                    if (c.rx + c.ry > p.rx + p.ry) return c\r\n                    return p\r\n                }, null)\r\n                let attrResult = {\r\n                    type: 'pies',\r\n                    data: {\r\n                        cx: c.cx,\r\n                        cy: c.cy,\r\n                        startAngle: c.startAngle,\r\n                        endAngle: c.endAngle,\r\n                        radius: circles.map(x => {\r\n                            return {\r\n                                rx: x.rx,\r\n                                ry: x.ry,\r\n                                rotate: x.rotate\r\n                            }\r\n                        })\r\n                    }\r\n                }\r\n                return attrResult;\r\n            }\r\n        }\r\n        // other unhandled style path\r\n        return null\r\n    }\r\n\r\n    static radian(ux, uy, vx, vy) {\r\n        var dot = ux * vx + uy * vy;\r\n        var mod = Math.sqrt((ux * ux + uy * uy) * (vx * vx + vy * vy));\r\n        var rad = Math.acos(dot / mod);\r\n        if (ux * vy - uy * vx < 0.0) {\r\n            rad = -rad;\r\n        }\r\n        return rad;\r\n    }\r\n\r\n    static svgArcToCenterParam(x1, y1, rx, ry, phi, fA, fS, x2, y2) {\r\n        var cx, cy, startAngle, deltaAngle, endAngle;\r\n        var PIx2 = Math.PI * 2.0;\r\n\r\n        if (rx < 0) {\r\n            rx = -rx;\r\n        }\r\n        if (ry < 0) {\r\n            ry = -ry;\r\n        }\r\n        if (rx == 0.0 || ry == 0.0) { // invalid arguments\r\n            throw Error('rx and ry can not be 0');\r\n        }\r\n\r\n        var s_phi = Math.sin(phi);\r\n        var c_phi = Math.cos(phi);\r\n        var hd_x = (x1 - x2) / 2.0; // half diff of x\r\n        var hd_y = (y1 - y2) / 2.0; // half diff of y\r\n        var hs_x = (x1 + x2) / 2.0; // half sum of x\r\n        var hs_y = (y1 + y2) / 2.0; // half sum of y\r\n\r\n        // F6.5.1\r\n        var x1_ = c_phi * hd_x + s_phi * hd_y;\r\n        var y1_ = c_phi * hd_y - s_phi * hd_x;\r\n\r\n        // F.6.6 Correction of out-of-range radii\r\n        //   Step 3: Ensure radii are large enough\r\n        var lambda = (x1_ * x1_) / (rx * rx) + (y1_ * y1_) / (ry * ry);\r\n        if (lambda > 1) {\r\n            rx = rx * Math.sqrt(lambda);\r\n            ry = ry * Math.sqrt(lambda);\r\n        }\r\n\r\n        var rxry = rx * ry;\r\n        var rxy1_ = rx * y1_;\r\n        var ryx1_ = ry * x1_;\r\n        var sum_of_sq = rxy1_ * rxy1_ + ryx1_ * ryx1_; // sum of square\r\n        if (!sum_of_sq) {\r\n            throw Error('start point can not be same as end point');\r\n        }\r\n        var coe = Math.sqrt(Math.abs((rxry * rxry - sum_of_sq) / sum_of_sq));\r\n        if (fA == fS) {\r\n            coe = -coe;\r\n        }\r\n\r\n        // F6.5.2\r\n        var cx_ = coe * rxy1_ / ry;\r\n        var cy_ = -coe * ryx1_ / rx;\r\n\r\n        // F6.5.3\r\n        cx = c_phi * cx_ - s_phi * cy_ + hs_x;\r\n        cy = s_phi * cx_ + c_phi * cy_ + hs_y;\r\n\r\n        var xcr1 = (x1_ - cx_) / rx;\r\n        var xcr2 = (x1_ + cx_) / rx;\r\n        var ycr1 = (y1_ - cy_) / ry;\r\n        var ycr2 = (y1_ + cy_) / ry;\r\n\r\n        // F6.5.5\r\n        startAngle = Util.radian(1.0, 0.0, xcr1, ycr1);\r\n\r\n        // F6.5.6\r\n        deltaAngle = Util.radian(xcr1, ycr1, -xcr2, -ycr2);\r\n        while (deltaAngle > PIx2) {\r\n            deltaAngle -= PIx2;\r\n        }\r\n        while (deltaAngle < 0.0) {\r\n            deltaAngle += PIx2;\r\n        }\r\n        if (fS == false || fS == 0) {\r\n            deltaAngle -= PIx2;\r\n        }\r\n        endAngle = startAngle + deltaAngle;\r\n        while (endAngle > PIx2) {\r\n            endAngle -= PIx2;\r\n        }\r\n        while (endAngle < 0.0) {\r\n            endAngle += PIx2;\r\n        }\r\n\r\n        var outputObj = {\r\n            /* cx, cy, startAngle, deltaAngle */\r\n            cx,\r\n            cy,\r\n            startAngle,\r\n            deltaAngle,\r\n            endAngle,\r\n            clockwise: (fS == true || fS == 1)\r\n        }\r\n\r\n        return outputObj;\r\n    }\r\n\r\n    static convertColor(str, fMode, tMode) {\r\n        if (typeof str !== 'string') return str\r\n        if (str === 'none') return null\r\n        str = str.trim()\r\n        let mr = null\r\n        if (tMode === undefined) {\r\n            tMode = fMode\r\n            if (str.startsWith('#')) {\r\n                fMode = 'hex'\r\n            } else if (str.startsWith('rgb')) {\r\n                fMode = 'rgb'\r\n            }\r\n        }\r\n        // assume user input is valid\r\n        switch (fMode) {\r\n            case 'rgb':\r\n                mr = str.split('(')[1].split(',').map(x => parseFloat(x))\r\n                break\r\n            case 'hex':\r\n                mr = str.slice(1).match(/.{1,2}/g).map(x => parseInt(x, 16))\r\n            default:\r\n                return str\r\n        }\r\n        mr = mr.slice(0, 3)\r\n        switch (tMode) {\r\n            case 'hex':\r\n                return '#' + mr.map(x => x.toString(16).padStart(2, '0')).join('')\r\n            case 'rgb':\r\n                return `rgb(${mr.join(',')})`\r\n            default:\r\n                return str\r\n        }\r\n    }\r\n\r\n    static polarToCartesian(centerX, centerY, radius, angleInRadians) {\r\n        return {\r\n            x: Math.round((centerX + (radius * Math.cos(angleInRadians))) * 100) / 100,\r\n            y: Math.round((centerY + (radius * Math.sin(angleInRadians))) * 100) / 100\r\n        };\r\n    };\r\n\r\n    static arc(x, y, innerRadius, outterRadius, startAngle, endAngle) {\r\n        startAngle = startAngle < 0 ? startAngle + 2 * Math.PI : startAngle;\r\n        endAngle = endAngle < 0 || startAngle > endAngle ? endAngle + 2 * Math.PI : endAngle;\r\n\r\n        //to generate cover, make the cover a little bigger\r\n        innerRadius = innerRadius === 0 ? 0 : innerRadius - 1;\r\n        outterRadius += 1;\r\n\r\n        let largeArcFlag = endAngle - startAngle <= Math.PI ? 0 : 1;\r\n\r\n        let start1 = Util.polarToCartesian(x, y, outterRadius, endAngle);\r\n        let end1 = Util.polarToCartesian(x, y, outterRadius, startAngle);\r\n        let start2 = Util.polarToCartesian(x, y, innerRadius, endAngle);\r\n        let end2 = Util.polarToCartesian(x, y, innerRadius, startAngle);\r\n\r\n        let isRing = false;\r\n        if (start1.x === end1.x && start1.y === end1.y) {//this is a ring\r\n            end1.y -= 1;\r\n            end2.y -= 1;\r\n            isRing = true;\r\n        }\r\n\r\n        let d;\r\n        if (!isRing) {\r\n            d = [\r\n                \"M\" + start1.x, start1.y,\r\n                \"A\" + outterRadius, outterRadius, 0, largeArcFlag, 0, end1.x, end1.y,\r\n                \"L\" + end2.x, end2.y,\r\n                \"A\" + innerRadius, innerRadius, 0, largeArcFlag, 1, start2.x, start2.y,\r\n                \"L\" + start1.x, start1.y + \"Z\"\r\n            ].join(\",\");\r\n        } else {\r\n            d = [\r\n                \"M\" + start1.x, start1.y,\r\n                \"A\" + outterRadius, outterRadius, 0, largeArcFlag, 1, end1.x, end1.y,\r\n                \"M\" + end2.x, end2.y,\r\n                \"A\" + innerRadius, innerRadius, 0, largeArcFlag, 0, start2.x, start2.y + \"Z\"\r\n            ].join(\",\");\r\n        }\r\n\r\n        return d;\r\n    };\r\n\r\n    /**\r\n     * turn a dom node to string\r\n     * @param {DOM} domNode \r\n     */\r\n    static domNodeToString(domNode) {\r\n        var element = document.createElement(\"div\");\r\n        element.appendChild(domNode);\r\n        return element.innerHTML;\r\n    }\r\n\r\n    /**\r\n     * turn a string to dom node\r\n     * @param {string} str \r\n     */\r\n    static strToDomNode(str) {\r\n        let tmpDiv = document.createElement('div');\r\n        tmpDiv.innerHTML = str.trim();\r\n        let dom = tmpDiv.firstChild;\r\n        return dom;\r\n    }\r\n\r\n    static transShape(t, tx, ty) {\r\n        if (t.tagName !== 'path') {\r\n            let hasPosi = false;\r\n            if (t.getAttribute('x') || t.getAttribute('y')) {\r\n                hasPosi = true;\r\n                t.setAttribute('x', t.getAttribute('x') ? parseFloat(t.getAttribute('x')) + tx : tx);\r\n                t.setAttribute('y', t.getAttribute('y') ? parseFloat(t.getAttribute('y')) + ty : ty);\r\n            }\r\n            if (t.getAttribute('x1') || t.getAttribute('y1') || t.getAttribute('x2') || t.getAttribute('y2')) {\r\n                hasPosi = true;\r\n                t.setAttribute('x1', t.getAttribute('x1') ? parseFloat(t.getAttribute('x1')) + tx : tx);\r\n                t.setAttribute('x2', t.getAttribute('x2') ? parseFloat(t.getAttribute('x2')) + tx : tx);\r\n                t.setAttribute('y1', t.getAttribute('y1') ? parseFloat(t.getAttribute('y1')) + ty : ty);\r\n                t.setAttribute('y2', t.getAttribute('y2') ? parseFloat(t.getAttribute('y2')) + ty : ty);\r\n            }\r\n            if (t.getAttribute('cx') || t.getAttribute('cy')) {\r\n                hasPosi = true;\r\n                t.setAttribute('cx', t.getAttribute('cx') ? parseFloat(t.getAttribute('cx')) + tx : tx);\r\n                t.setAttribute('cy', t.getAttribute('cy') ? parseFloat(t.getAttribute('cy')) + ty : ty);\r\n            }\r\n            if (!hasPosi) {\r\n                if (t.tagName === 'circle') {\r\n                    t.setAttribute('cx', tx);\r\n                    t.setAttribute('cy', ty);\r\n                } else {\r\n                    t.setAttribute('x', tx);\r\n                    t.setAttribute('y', ty);\r\n                }\r\n            }\r\n        } else {\r\n            if (t.getAttribute('d')) {\r\n                let resultCmd = Util.setPathDValue(t.getAttribute('d'), false, tx, ty);\r\n                t.setAttribute('d', resultCmd);\r\n            }\r\n        }\r\n    }\r\n    static setPathDValue(d, reset, tx = 0, ty = 0, diffCmds = new Map()) {\r\n        d = d.replace(/(?<=\\d)\\s(?=[mMlLhHvVcCsSqQtTaAzZ])/g, '').replace(/(?<=[mMlLhHvVcCsSqQtTaA])\\s(?=(\\d|[-+]))/g, '').replace(/\\s/g, ',');\r\n        let cmdRegExp = new RegExp(/[mMlLhHvVcCsSqQtTaA][^mMlLhHvVcCsSqQtTaAzZ]*/g);\r\n        let resultCmd = '';\r\n        let cmds = d.match(cmdRegExp);\r\n        if (cmds) {\r\n            //get the position of the first move cmd if there is one\r\n            let firstCmdName = cmds[0].substring(0, 1);\r\n            let resetX = '0', resetY = '0';\r\n            if (firstCmdName === 'm' || firstCmdName === 'M') {\r\n                let firstCmdValues = cmds[0].substring(1).split(',');\r\n                resetX = firstCmdValues[0];\r\n                resetY = firstCmdValues[1];\r\n            }\r\n\r\n            for (let i = 0; i < cmds.length; i++) {\r\n                let cmdName = cmds[i].substring(0, 1);\r\n                let cmdValue = cmds[i].substring(1);\r\n                resultCmd += cmdName;\r\n                switch (cmdName) {\r\n                    case 'H':\r\n                        resultCmd = this.calNumTrans(resultCmd, diffCmds, i, cmdName, cmdValue, reset, resetX, tx);\r\n                        break;\r\n                    case 'h':\r\n                        resultCmd = this.calNumTrans(resultCmd, diffCmds, i, cmdName, cmdValue, reset, '0', 0);\r\n                        break;\r\n                    case 'V':\r\n                        resultCmd = this.calNumTrans(resultCmd, diffCmds, i, cmdName, cmdValue, reset, resetY, ty);\r\n                        break;\r\n                    case 'v':\r\n                        resultCmd = this.calNumTrans(resultCmd, diffCmds, i, cmdName, cmdValue, reset, '0', 0);\r\n                        break;\r\n                    case 'M':\r\n                    case 'L':\r\n                    case 'T':\r\n                    case 'C':\r\n                    case 'S':\r\n                    case 'Q':\r\n                        let nums = cmdValue.split(',');\r\n                        for (let ni = 0; ni < nums.length; ni++) {\r\n                            if (ni % 2 === 0) {//x\r\n                                resultCmd = this.calNumTrans(resultCmd, diffCmds, i, cmdName, nums[ni], reset, resetX, tx);\r\n                            } else {//y\r\n                                resultCmd = this.calNumTrans(resultCmd, diffCmds, i, cmdName, nums[ni], reset, resetY, ty);\r\n                            }\r\n                            if (ni !== nums.length - 1) {\r\n                                resultCmd += ',';\r\n                            }\r\n                        }\r\n                        break;\r\n                    case 'm':\r\n                    case 'l':\r\n                    case 't':\r\n                    case 'c':\r\n                    case 's':\r\n                    case 'q':\r\n                        let nums2 = cmdValue.split(',');\r\n                        for (let ni = 0; ni < nums2.length; ni++) {\r\n                            resultCmd = this.calNumTrans(resultCmd, diffCmds, i, cmdName, nums2[ni], reset, '0', 0);\r\n                            if (ni !== nums2.length - 1) {\r\n                                resultCmd += ',';\r\n                            }\r\n                        }\r\n                        break;\r\n                    case 'A':\r\n                        let anums = cmdValue.split(',');\r\n                        for (let ni = 0; ni < anums.length; ni++) {\r\n                            if (ni === anums.length - 2) {//x\r\n                                resultCmd = this.calNumTrans(resultCmd, diffCmds, i, cmdName, anums[ni], reset, parseFloat(resetX) + 1, tx);\r\n                                resultCmd += ',';\r\n                            } else if (ni === anums.length - 1) {//y\r\n                                resultCmd = this.calNumTrans(resultCmd, diffCmds, i, cmdName, anums[ni], reset, parseFloat(resetY) + 1, ty);\r\n                            } else {\r\n                                resultCmd += anums[ni] + ',';\r\n                            }\r\n                        }\r\n                        break;\r\n                    case 'a':\r\n                        let anums2 = cmdValue.split(',');\r\n                        for (let ni = 0; ni < anums2.length; ni++) {\r\n                            if (ni === anums2.length - 2) {//x\r\n                                resultCmd = this.calNumTrans(resultCmd, diffCmds, i, cmdName, anums2[ni], reset, '1', 0);\r\n                                resultCmd += ',';\r\n                            } else if (ni === anums2.length - 1) {//y\r\n                                resultCmd = this.calNumTrans(resultCmd, diffCmds, i, cmdName, anums2[ni], reset, '1', 0);\r\n                            } else {\r\n                                resultCmd += anums2[ni] + ',';\r\n                            }\r\n                        }\r\n                        break;\r\n                }\r\n            }\r\n            if (d.charAt(d.length - 1) === 'z' || d.charAt(d.length - 1) === 'Z') {\r\n                resultCmd += 'Z';\r\n            }\r\n        }\r\n        return resultCmd;\r\n    }\r\n\r\n    static calNumTrans(resultCmd, diffCmds, currentCmdIdx, cmdName, cmdValue, reset, resetVal, tVal) {\r\n        cmdName = cmdName.toLowerCase();\r\n        if (reset) {\r\n            if (typeof diffCmds.get(cmdName) !== 'undefined') {\r\n                let diffCmdIdxs = diffCmds.get(cmdName);\r\n                let flag = false;\r\n                for (let j = 0; j < diffCmdIdxs.length; j++) {\r\n                    if (diffCmdIdxs[j].cmdIdx === currentCmdIdx) {\r\n                        resultCmd += resetVal;\r\n                        flag = true;\r\n                        break;\r\n                    }\r\n                }\r\n                if (!flag) {\r\n                    resultCmd += cmdValue;\r\n                }\r\n            } else {\r\n                resultCmd += cmdValue;\r\n            }\r\n        } else {\r\n            resultCmd += (parseFloat(cmdValue) + tVal);\r\n        }\r\n        return resultCmd;\r\n    }\r\n\r\n    /**\r\n     * doing transition with path\r\n     * @param {*} startD \r\n     * @param {*} endD \r\n     * @param {*} ratio \r\n     */\r\n    static calTransD(startD, endD, ratio, startDisD, endDisD) {\r\n        startD = startD.replace(/(?<=\\d)\\s(?=[mMlLhHvVcCsSqQtTaAzZ])/g, '').replace(/(?<=[mMlLhHvVcCsSqQtTaA])\\s(?=(\\d|[-+]))/g, '').replace(/\\s/g, ',');\r\n        endD = endD.replace(/(?<=\\d)\\s(?=[mMlLhHvVcCsSqQtTaAzZ])/g, '').replace(/(?<=[mMlLhHvVcCsSqQtTaA])\\s(?=(\\d|[-+]))/g, '').replace(/\\s/g, ',');\r\n        let resultCmd = '';\r\n        if (ratio === 0) {\r\n            resultCmd = startD;\r\n        } else if (ratio === 1) {\r\n            resultCmd = endD;\r\n        } else {\r\n            for (let i = 0, len = startDisD.length; i < len; i++) {\r\n                resultCmd += (i === 0 ? 'M' : 'L') + ((endDisD[i][0] - startDisD[i][0]) * ratio + startDisD[i][0]) + ',' + ((endDisD[i][1] - startDisD[i][1]) * ratio + startDisD[i][1]);\r\n            }\r\n        }\r\n        \r\n        if (startD.charAt(startD.length - 1) === 'z' || startD.charAt(startD.length - 1) === 'Z') {\r\n            resultCmd += 'Z';\r\n        }\r\n        return resultCmd;\r\n    }\r\n\r\n    /** startAngle should smaller than endAngle\r\n     * @param {number} fromStartAngle start state of start angle\r\n     * @param {number} fromEndAngle start state of end angle\r\n     * @param {number} toStartAngle end state of start angle\r\n     * @param {number} toEndAngle end state of end angle\r\n     * @param {number} ratio 0-1 float number\r\n     * @param {Function<number,number,number>} interpolateFn customize interpolate function, input is (start, end, ratio), default is linear\r\n     * @returns {Array<number>} [startAngle, endAngle] of given ratio\r\n     */\r\n    static arcTransition(fromStartAngle, fromEndAngle, toStartAngle, toEndAngle, ratio, interpolateFn) {\r\n        let validAngle = (s, e) => e < s ? (() => { throw 'startAngle should smaller than endAngle' })() : null\r\n        validAngle(fromStartAngle, fromEndAngle)\r\n        validAngle(toStartAngle, toEndAngle)\r\n        let minimalAngle = (s, e) => e - Math.PI * 2 * Math.floor((e - s) / Math.PI / 2)\r\n        // uniform angle domain within 2*PI\r\n        fromEndAngle = minimalAngle(fromStartAngle, fromEndAngle)\r\n        toStartAngle = minimalAngle(fromStartAngle, toStartAngle)\r\n        toEndAngle = minimalAngle(toStartAngle, toEndAngle)\r\n        // find the cloest domain\r\n        toStartAngle -= Math.abs(toStartAngle - fromStartAngle) + Math.abs(toEndAngle - fromEndAngle) < 2 * Math.PI ? 0 : Math.PI * 2\r\n        toEndAngle = minimalAngle(toStartAngle, toEndAngle)\r\n        let interpolate = interpolateFn || ((s, e, r) => r * (e - s) + s)\r\n        return [interpolate(fromStartAngle, toStartAngle, ratio), interpolate(fromEndAngle, toEndAngle, ratio)]\r\n    }\r\n\r\n    static findDiffCmds(markStatus) {\r\n        let result = new Map();\r\n        markStatus.forEach((statusArr, markId) => {\r\n            let tmpDRecorder = [];\r\n            for (let i = 0; i < statusArr.length; i++) {\r\n                if (typeof statusArr[i] !== 'undefined') {\r\n                    tmpDRecorder.push(!statusArr[i].d ? 'm0,0' : statusArr[i].d);\r\n                }\r\n            }\r\n            if (tmpDRecorder.length > 0) {\r\n                Util.compareD(tmpDRecorder, result);\r\n            }\r\n        })\r\n        return result;\r\n    }\r\n\r\n    static compareD(dArr, result) {\r\n        let cmdRegExp = new RegExp(/[mlhvcsqta][^mlhvcsqtaz]*/g);\r\n        let firstD = dArr[0];\r\n        firstD = firstD.toLowerCase();\r\n        firstD = firstD.replace(/(?<=\\d)\\s(?=[mlhvcsqtaz])/g, '').replace(/(?<=[mlhvcsqta])\\s(?=(\\d|[-+]))/g, '').replace(/\\s/g, ',');\r\n        let firstDCmds = firstD.match(cmdRegExp);\r\n        for (let i = 1; i < dArr.length; i++) {\r\n            let tmpD = dArr[i];\r\n            tmpD = tmpD.toLowerCase();\r\n            tmpD = tmpD.replace(/(?<=\\d)\\s(?=[mlhvcsqtaz])/g, '').replace(/(?<=[mlhvcsqta])\\s(?=(\\d|[-+]))/g, '').replace(/\\s/g, ',');\r\n            let tmpDCmds = tmpD.match(cmdRegExp);\r\n            for (let j = 0; j < firstDCmds.length; j++) {\r\n                if (typeof tmpDCmds[j] === 'undefined') {\r\n                    let cmdName = firstDCmds[j].substring(0, 1);\r\n                    if (typeof result.get(cmdName) === 'undefined') {\r\n                        result.set(cmdName, []);\r\n                    }\r\n                    let obj = {};\r\n                    obj.cmdIdx = j;\r\n                    obj.diffAttrIdxs = [];\r\n                    let firstDCmdValue = firstDCmds[j].substring(1);\r\n                    let firstDCmdValues = firstDCmdValue.split(',');\r\n                    for (let m = 0; m < firstDCmdValues.length; m++) {\r\n                        obj.diffAttrIdxs.push(m);\r\n                    }\r\n                    result.get(cmdName).push(obj);\r\n                } else {\r\n                    let cmdName = tmpDCmds[j].substring(0, 1);\r\n                    let tmpDCmdValue = tmpDCmds[j].substring(1);\r\n                    let firstDCmdValue = firstDCmds[j].substring(1);\r\n                    if (tmpDCmdValue !== firstDCmdValue) {\r\n                        if (typeof result.get(cmdName) === 'undefined') {\r\n                            result.set(cmdName, []);\r\n                        }\r\n                        let obj = {};\r\n                        obj.cmdIdx = j;\r\n                        obj.diffAttrIdxs = [];\r\n                        let tmpDCmdValues = tmpDCmdValue.split(',');\r\n                        let firstDCmdValues = firstDCmdValue.split(',');\r\n                        for (let m = 0; m < tmpDCmdValues.length; m++) {\r\n                            if (Math.floor(parseFloat(tmpDCmdValues[m]) * 1000) !== Math.floor(parseFloat(firstDCmdValues[m]) * 1000)) {\r\n                                obj.diffAttrIdxs.push(m);\r\n                            }\r\n                        }\r\n                        //check whether have already added this cmd\r\n                        let hasFlag = false;\r\n                        for (let m = 0; m < result.get(cmdName).length; m++) {\r\n                            if (result.get(cmdName)[m].cmdIdx === obj.cmdIdx) {\r\n                                hasFlag = true;\r\n                                result.get(cmdName)[m].diffAttrIdxs = [...new Set([...result.get(cmdName)[m].diffAttrIdxs, ...obj.diffAttrIdxs])];\r\n                                break;\r\n                            }\r\n                        }\r\n                        if (!hasFlag) {\r\n                            result.get(cmdName).push(obj);\r\n                        }\r\n                    }\r\n                }\r\n\r\n            }\r\n        }\r\n    }\r\n\r\n    static getTransformAttrs(dom) {\r\n        let tr = dom.getAttribute('transform');\r\n        if (tr) {\r\n            tr = tr.replace(/translate|scale|rotate|\\s/g, (m) => {\r\n                return m === ' ' ? '' : '@' + m;\r\n            });\r\n            tr = tr.replace(/(^@*)|(@*$)/g, '').split('@');\r\n            let scaleStr = '', transStr = '';\r\n            for (let i = 0; i < tr.length; i++) {\r\n                if (tr[i].indexOf('translate') >= 0) {\r\n                    transStr = tr[i];\r\n                } else if (tr[i].indexOf('scale') >= 0) {\r\n                    scaleStr = tr[i];\r\n                }\r\n            }\r\n            let transPosiStr = ['0', '0'], scaleNumStr = '1';\r\n            if (transStr !== '') {\r\n                transPosiStr = transStr.replace(/translate\\(| |\\)/g, '').split(',');\r\n            }\r\n            if (scaleStr !== '') {\r\n                scaleNumStr = scaleStr.replace(/scale\\(| |\\)/g, '');\r\n            }\r\n            return { transNums: [parseFloat(transPosiStr[0]), parseFloat(transPosiStr[1])], scaleNum: parseFloat(scaleNumStr) };\r\n        }\r\n        return { transNums: [0.0, 0.0], scaleNum: 1.0 };\r\n    }\r\n\r\n    /**\r\n     * check if a string contains html tag\r\n     */\r\n    static checkHTML(str){\r\n        var reg = /<[^>]+>/g;\r\n        return reg.test(str);\r\n    }\r\n}\r\n\r\nUtil.colorNames = new Map([['aliceblue', '#f0f8ff'], ['antiquewhite', '#faebd7'], ['aqua', '#00ffff'], ['aquamarine', '#7fffd4'], ['azure', '#f0ffff'], ['beige', '#f5f5dc'], ['bisque', '#ffe4c4'], ['black', '#000000'], ['blanchedalmond', '#ffebcd'], ['blue', '#0000ff'], ['blueviolet', '#8a2be2'], ['brown', '#a52a2a'], ['burlywood', '#deb887'], ['cadetblue', '#5f9ea0'], ['chartreuse', '#7fff00'], ['chocolate', '#d2691e'], ['coral', '#ff7f50'], ['cornflowerblue', '#6495ed'], ['cornsilk', '#fff8dc'], ['crimson', '#dc143c'], ['cyan', '#00ffff'], ['darkblue', '#00008b'], ['darkcyan', '#008b8b'], ['darkgoldenrod', '#b8860b'], ['darkgray', '#a9a9a9'], ['darkgrey', '#a9a9a9'], ['darkgreen', '#006400'], ['darkkhaki', '#bdb76b'], ['darkmagenta', '#8b008b'], ['darkolivegreen', '#556b2f'], ['darkorange', '#ff8c00'], ['darkorchid', '#9932cc'], ['darkred', '#8b0000'], ['darksalmon', '#e9967a'], ['darkseagreen', '#8fbc8f'], ['darkslateblue', '#483d8b'], ['darkslategray', '#2f4f4f'], ['darkslategrey', '#2f4f4f'], ['darkturquoise', '#00ced1'], ['darkviolet', '#9400d3'], ['deeppink', '#ff1493'], ['deepskyblue', '#00bfff'], ['dimgray', '#696969'], ['dimgrey', '#696969'], ['dodgerblue', '#1e90ff'], ['firebrick', '#b22222'], ['floralwhite', '#fffaf0'], ['forestgreen', '#228b22'], ['fuchsia', '#ff00ff'], ['gainsboro', '#dcdcdc'], ['ghostwhite', '#f8f8ff'], ['gold', '#ffd700'], ['goldenrod', '#daa520'], ['gray', '#808080'], ['grey', '#808080'], ['green', '#008000'], ['greenyellow', '#adff2f'], ['honeydew', '#f0fff0'], ['hotpink', '#ff69b4'], ['indianred ', '#cd5c5c'], ['indigo  ', '#4b0082'], ['ivory', '#fffff0'], ['khaki', '#f0e68c'], ['lavender', '#e6e6fa'], ['lavenderblush', '#fff0f5'], ['lawngreen', '#7cfc00'], ['lemonchiffon', '#fffacd'], ['lightblue', '#add8e6'], ['lightcoral', '#f08080'], ['lightcyan', '#e0ffff'], ['lightgoldenrodyellow', '#fafad2'], ['lightgray', '#d3d3d3'], ['lightgrey', '#d3d3d3'], ['lightgreen', '#90ee90'], ['lightpink', '#ffb6c1'], ['lightsalmon', '#ffa07a'], ['lightseagreen', '#20b2aa'], ['lightskyblue', '#87cefa'], ['lightslategray', '#778899'], ['lightslategrey', '#778899'], ['lightsteelblue', '#b0c4de'], ['lightyellow', '#ffffe0'], ['lime', '#00ff00'], ['limegreen', '#32cd32'], ['linen', '#faf0e6'], ['magenta', '#ff00ff'], ['maroon', '#800000'], ['mediumaquamarine', '#66cdaa'], ['mediumblue', '#0000cd'], ['mediumorchid', '#ba55d3'], ['mediumpurple', '#9370db'], ['mediumseagreen', '#3cb371'], ['mediumslateblue', '#7b68ee'], ['mediumspringgreen', '#00fa9a'], ['mediumturquoise', '#48d1cc'], ['mediumvioletred', '#c71585'], ['midnightblue', '#191970'], ['mintcream', '#f5fffa'], ['mistyrose', '#ffe4e1'], ['moccasin', '#ffe4b5'], ['navajowhite', '#ffdead'], ['navy', '#000080'], ['oldlace', '#fdf5e6'], ['olive', '#808000'], ['olivedrab', '#6b8e23'], ['orange', '#ffa500'], ['orangered', '#ff4500'], ['orchid', '#da70d6'], ['palegoldenrod', '#eee8aa'], ['palegreen', '#98fb98'], ['paleturquoise', '#afeeee'], ['palevioletred', '#db7093'], ['papayawhip', '#ffefd5'], ['peachpuff', '#ffdab9'], ['peru', '#cd853f'], ['pink', '#ffc0cb'], ['plum', '#dda0dd'], ['powderblue', '#b0e0e6'], ['purple', '#800080'], ['rebeccapurple', '#663399'], ['red', '#ff0000'], ['rosybrown', '#bc8f8f'], ['royalblue', '#4169e1'], ['saddlebrown', '#8b4513'], ['salmon', '#fa8072'], ['sandybrown', '#f4a460'], ['seagreen', '#2e8b57'], ['seashell', '#fff5ee'], ['sienna', '#a0522d'], ['silver', '#c0c0c0'], ['skyblue', '#87ceeb'], ['slateblue', '#6a5acd'], ['slategray', '#708090'], ['slategrey', '#708090'], ['snow', '#fffafa'], ['springgreen', '#00ff7f'], ['steelblue', '#4682b4'], ['tan', '#d2b48c'], ['teal', '#008080'], ['thistle', '#d8bfd8'], ['tomato', '#ff6347'], ['turquoise', '#40e0d0'], ['violet', '#ee82ee'], ['wheat', '#f5deb3'], ['white', '#ffffff'], ['whitesmoke', '#f5f5f5'], ['yellow', '#ffff00'], ['yellowgreen', '#9acd32']])\r\n\r\nexport default Util;"],"sourceRoot":""}